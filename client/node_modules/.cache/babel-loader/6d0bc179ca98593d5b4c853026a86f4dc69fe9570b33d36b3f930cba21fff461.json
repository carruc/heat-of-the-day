{"ast":null,"code":"var _jsxFileName = \"/home/carruc/repos/heat-of-the-day-wip/client/src/components/EventModal.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { X, Calendar, Clock } from 'lucide-react';\nimport { dataUtils } from '../services/api';\nimport './EventModal.css';\n\n// Helper function to detect browser's date format\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst getBrowserDateFormat = () => {\n  // Create a known date to test format\n  const testDate = new Date(2024, 0, 15); // January 15, 2024\n  const formatted = testDate.toLocaleDateString();\n\n  // Check if it starts with month (MM/DD) or day (DD/MM)\n  if (formatted.startsWith('1/15') || formatted.startsWith('01/15')) {\n    return 'MM/DD/YYYY';\n  } else if (formatted.startsWith('15/1') || formatted.startsWith('15/01')) {\n    return 'DD/MM/YYYY';\n  } else {\n    // Try to detect other common formats\n    const parts = formatted.split(/[\\/\\-\\.]/);\n    if (parts.length >= 3) {\n      const first = parseInt(parts[0]);\n      const second = parseInt(parts[1]);\n\n      // If first part is greater than 12, it's likely day first\n      if (first > 12) {\n        return 'DD/MM/YYYY';\n      } else if (second > 12) {\n        return 'MM/DD/YYYY';\n      }\n    }\n  }\n\n  // Default fallback\n  return 'MM/DD/YYYY';\n};\n\n// Implements requirement D6: Event creation modal\nconst EventModal = ({\n  event,\n  projects,\n  onSave,\n  onClose\n}) => {\n  _s();\n  const [formData, setFormData] = useState({\n    name: '',\n    projectId: '',\n    date: '',\n    time: '',\n    type: 'milestone'\n  });\n  const [errors, setErrors] = useState({});\n\n  // Initialize form data when editing\n  useEffect(() => {\n    if (event) {\n      const eventDate = new Date(event.date);\n      setFormData({\n        name: event.name,\n        projectId: event.projectId,\n        date: eventDate.toISOString().split('T')[0],\n        time: eventDate.toTimeString().slice(0, 5),\n        type: event.type\n      });\n    } else {\n      // Pre-fill with current year when creating new event\n      const currentYear = new Date().getFullYear();\n      const defaultDate = `${currentYear}-01-01`;\n      const defaultTime = '09:00';\n      setFormData(prev => ({\n        ...prev,\n        date: defaultDate,\n        time: defaultTime,\n        projectId: projects.length > 0 ? projects[0].id : ''\n      }));\n    }\n  }, [event, projects]);\n  const handleInputChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setFormData(prev => ({\n      ...prev,\n      [name]: value\n    }));\n\n    // Clear errors when user starts typing\n    if (errors[name]) {\n      setErrors(prev => ({\n        ...prev,\n        [name]: null\n      }));\n    }\n  };\n  const validateForm = () => {\n    const newErrors = {};\n    if (!formData.name.trim()) {\n      newErrors.name = 'Event name is required';\n    } else if (formData.name.trim().length < 2) {\n      newErrors.name = 'Event name must be at least 2 characters';\n    } else if (formData.name.trim().length > 100) {\n      newErrors.name = 'Event name must be less than 100 characters';\n    }\n    if (!formData.projectId) {\n      newErrors.projectId = 'Please select a project';\n    }\n    if (!formData.date) {\n      newErrors.date = 'Date is required';\n    } else {\n      const selectedDate = new Date(formData.date + 'T' + (formData.time || '00:00'));\n      const now = new Date();\n\n      // Check if date is in the past (implement R9.3)\n      if (selectedDate < now) {\n        newErrors.date = 'Date cannot be in the past';\n      }\n    }\n    if (!formData.time) {\n      newErrors.time = 'Time is required';\n    }\n\n    // Check deadline constraint (implement R4)\n    if (formData.type === 'deadline' && formData.projectId) {\n      const project = projects.find(p => p.id === formData.projectId);\n      if (project) {\n        // This would need to be checked against existing events in the parent component\n        // For now, we'll let the backend handle this validation\n      }\n    }\n    setErrors(newErrors);\n    return Object.keys(newErrors).length === 0;\n  };\n  const handleSubmit = e => {\n    e.preventDefault();\n    if (validateForm()) {\n      const eventDateTime = new Date(formData.date + 'T' + formData.time);\n      onSave({\n        name: formData.name.trim(),\n        projectId: formData.projectId,\n        date: eventDateTime.toISOString(),\n        type: formData.type\n      });\n    }\n  };\n  const handleOverlayClick = e => {\n    if (e.target === e.currentTarget) {\n      onClose();\n    }\n  };\n\n  // Get selected project for preview\n  const selectedProject = projects.find(p => p.id === formData.projectId);\n\n  // Format date for display in DD/MM/YYYY format\n  const formatDateForDisplay = () => {\n    if (formData.date && formData.time) {\n      const eventDate = new Date(formData.date + 'T' + formData.time);\n      const day = eventDate.getDate().toString().padStart(2, '0');\n      const month = (eventDate.getMonth() + 1).toString().padStart(2, '0');\n      const year = eventDate.getFullYear();\n      const time = formData.time;\n      return `${day}/${month}/${year} at ${time}`;\n    }\n    return 'Select date and time';\n  };\n\n  // Helper function to format date in DD/MM/YYYY for input labels\n  const formatDateLabel = dateString => {\n    if (!dateString) return '';\n    const date = new Date(dateString);\n    const day = date.getDate().toString().padStart(2, '0');\n    const month = (date.getMonth() + 1).toString().padStart(2, '0');\n    const year = date.getFullYear();\n    return `${day}/${month}/${year}`;\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"modal-overlay\",\n    onClick: handleOverlayClick,\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"modal-content event-modal\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"modal-header\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: event ? 'Edit Event' : 'Create New Event'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 185,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"btn btn-ghost btn-sm\",\n          onClick: onClose,\n          children: /*#__PURE__*/_jsxDEV(X, {\n            size: 16\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 187,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 186,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 184,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleSubmit,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"modal-body\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-group\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              className: \"form-label\",\n              children: \"Event Type *\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 195,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"event-type-selector\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                className: \"radio-option\",\n                children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"radio\",\n                  name: \"type\",\n                  value: \"milestone\",\n                  checked: formData.type === 'milestone',\n                  onChange: handleInputChange\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 198,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"radio-label\",\n                  children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                    className: \"radio-icon milestone\",\n                    children: \"M\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 206,\n                    columnNumber: 21\n                  }, this), \"Milestone\"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 205,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"radio-description\",\n                  children: \"A significant point or achievement in your project\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 209,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 197,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n                className: \"radio-option\",\n                children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"radio\",\n                  name: \"type\",\n                  value: \"deadline\",\n                  checked: formData.type === 'deadline',\n                  onChange: handleInputChange\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 215,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"radio-label\",\n                  children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                    className: \"radio-icon deadline\",\n                    children: \"D\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 223,\n                    columnNumber: 21\n                  }, this), \"Deadline\"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 222,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"radio-description\",\n                  children: \"The final date for project completion\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 226,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 214,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 196,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 194,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-group\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"eventProject\",\n              className: \"form-label\",\n              children: \"Project *\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 235,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n              id: \"eventProject\",\n              name: \"projectId\",\n              className: `input ${errors.projectId ? 'input-error' : ''}`,\n              value: formData.projectId,\n              onChange: handleInputChange,\n              children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"\",\n                children: \"Select a project...\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 245,\n                columnNumber: 17\n              }, this), projects.map(project => /*#__PURE__*/_jsxDEV(\"option\", {\n                value: project.id,\n                children: project.name\n              }, project.id, false, {\n                fileName: _jsxFileName,\n                lineNumber: 247,\n                columnNumber: 19\n              }, this))]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 238,\n              columnNumber: 15\n            }, this), errors.projectId && /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"form-error\",\n              children: errors.projectId\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 253,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 234,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-group\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"eventName\",\n              className: \"form-label\",\n              children: \"Event Name *\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 259,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              id: \"eventName\",\n              name: \"name\",\n              type: \"text\",\n              className: `input ${errors.name ? 'input-error' : ''}`,\n              value: formData.name,\n              onChange: handleInputChange,\n              placeholder: `Enter ${formData.type} name...`,\n              autoFocus: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 262,\n              columnNumber: 15\n            }, this), errors.name && /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"form-error\",\n              children: errors.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 273,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 258,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-group\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              className: \"form-label\",\n              children: \"Date and Time *\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 279,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"form-help\",\n              style: {\n                marginBottom: 'var(--spacing-sm)'\n              },\n              children: \"Please enter the date and time for this event. Your browser will show the date picker in your local format, but the date will always be saved in DD/MM/YYYY format for consistency.\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 282,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"datetime-inputs\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"date-input-group\",\n                children: [/*#__PURE__*/_jsxDEV(Calendar, {\n                  size: 16,\n                  className: \"input-icon\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 287,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                  name: \"date\",\n                  type: \"date\",\n                  className: `input ${errors.date ? 'input-error' : ''}`,\n                  value: formData.date,\n                  onChange: handleInputChange,\n                  min: new Date().toISOString().split('T')[0],\n                  title: formData.date ? `Selected: ${formatDateLabel(formData.date)}` : 'Select a date'\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 288,\n                  columnNumber: 19\n                }, this), formData.date && /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"date-display\",\n                  children: formatDateLabel(formData.date)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 298,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 286,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"time-input-group\",\n                children: [/*#__PURE__*/_jsxDEV(Clock, {\n                  size: 16,\n                  className: \"input-icon\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 303,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                  name: \"time\",\n                  type: \"time\",\n                  className: `input ${errors.time ? 'input-error' : ''}`,\n                  value: formData.time,\n                  onChange: handleInputChange\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 304,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 302,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 285,\n              columnNumber: 15\n            }, this), (errors.date || errors.time) && /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"form-error\",\n              children: errors.date || errors.time\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 314,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 278,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"event-preview\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"preview-label\",\n              children: \"Preview:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 322,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"preview-event\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: `event-type-badge ${formData.type}`,\n                style: {\n                  backgroundColor: (selectedProject === null || selectedProject === void 0 ? void 0 : selectedProject.color) || '#6b7280'\n                },\n                children: formData.type\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 324,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"preview-event-details\",\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"preview-event-name\",\n                  children: formData.name || `${formData.type} name`\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 333,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"preview-event-project\",\n                  children: selectedProject ? /*#__PURE__*/_jsxDEV(\"span\", {\n                    style: {\n                      color: selectedProject.color\n                    },\n                    children: selectedProject.name\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 338,\n                    columnNumber: 23\n                  }, this) : 'Select a project'\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 336,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"preview-event-datetime\",\n                  children: formatDateForDisplay()\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 345,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 332,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 323,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 321,\n            columnNumber: 13\n          }, this), formData.type === 'deadline' && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"warning-message\",\n            children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n              children: \"Note:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 355,\n              columnNumber: 17\n            }, this), \" Each project can only have one deadline. If this project already has a deadline, it will be replaced.\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 354,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 192,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"modal-footer\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"button\",\n            className: \"btn btn-secondary\",\n            onClick: onClose,\n            children: \"Cancel\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 362,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"submit\",\n            className: \"btn btn-primary\",\n            children: event ? 'Update Event' : 'Create Event'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 365,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 361,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 191,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 183,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 182,\n    columnNumber: 5\n  }, this);\n};\n_s(EventModal, \"Fjz/klQ+Dhh9MJBlHwHuTgPGUh0=\");\n_c = EventModal;\nexport default EventModal;\nvar _c;\n$RefreshReg$(_c, \"EventModal\");","map":{"version":3,"names":["React","useState","useEffect","X","Calendar","Clock","dataUtils","jsxDEV","_jsxDEV","getBrowserDateFormat","testDate","Date","formatted","toLocaleDateString","startsWith","parts","split","length","first","parseInt","second","EventModal","event","projects","onSave","onClose","_s","formData","setFormData","name","projectId","date","time","type","errors","setErrors","eventDate","toISOString","toTimeString","slice","currentYear","getFullYear","defaultDate","defaultTime","prev","id","handleInputChange","e","value","target","validateForm","newErrors","trim","selectedDate","now","project","find","p","Object","keys","handleSubmit","preventDefault","eventDateTime","handleOverlayClick","currentTarget","selectedProject","formatDateForDisplay","day","getDate","toString","padStart","month","getMonth","year","formatDateLabel","dateString","className","onClick","children","fileName","_jsxFileName","lineNumber","columnNumber","size","onSubmit","checked","onChange","htmlFor","map","placeholder","autoFocus","style","marginBottom","min","title","backgroundColor","color","_c","$RefreshReg$"],"sources":["/home/carruc/repos/heat-of-the-day-wip/client/src/components/EventModal.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { X, Calendar, Clock } from 'lucide-react';\nimport { dataUtils } from '../services/api';\nimport './EventModal.css';\n\n// Helper function to detect browser's date format\nconst getBrowserDateFormat = () => {\n  // Create a known date to test format\n  const testDate = new Date(2024, 0, 15); // January 15, 2024\n  const formatted = testDate.toLocaleDateString();\n  \n  // Check if it starts with month (MM/DD) or day (DD/MM)\n  if (formatted.startsWith('1/15') || formatted.startsWith('01/15')) {\n    return 'MM/DD/YYYY';\n  } else if (formatted.startsWith('15/1') || formatted.startsWith('15/01')) {\n    return 'DD/MM/YYYY';\n  } else {\n    // Try to detect other common formats\n    const parts = formatted.split(/[\\/\\-\\.]/);\n    if (parts.length >= 3) {\n      const first = parseInt(parts[0]);\n      const second = parseInt(parts[1]);\n      \n      // If first part is greater than 12, it's likely day first\n      if (first > 12) {\n        return 'DD/MM/YYYY';\n      } else if (second > 12) {\n        return 'MM/DD/YYYY';\n      }\n    }\n  }\n  \n  // Default fallback\n  return 'MM/DD/YYYY';\n};\n\n// Implements requirement D6: Event creation modal\nconst EventModal = ({ event, projects, onSave, onClose }) => {\n  const [formData, setFormData] = useState({\n    name: '',\n    projectId: '',\n    date: '',\n    time: '',\n    type: 'milestone'\n  });\n  const [errors, setErrors] = useState({});\n\n  // Initialize form data when editing\n  useEffect(() => {\n    if (event) {\n      const eventDate = new Date(event.date);\n      setFormData({\n        name: event.name,\n        projectId: event.projectId,\n        date: eventDate.toISOString().split('T')[0],\n        time: eventDate.toTimeString().slice(0, 5),\n        type: event.type\n      });\n    } else {\n      // Pre-fill with current year when creating new event\n      const currentYear = new Date().getFullYear();\n      const defaultDate = `${currentYear}-01-01`;\n      const defaultTime = '09:00';\n      \n      setFormData(prev => ({\n        ...prev,\n        date: defaultDate,\n        time: defaultTime,\n        projectId: projects.length > 0 ? projects[0].id : ''\n      }));\n    }\n  }, [event, projects]);\n\n  const handleInputChange = (e) => {\n    const { name, value } = e.target;\n    setFormData(prev => ({\n      ...prev,\n      [name]: value\n    }));\n    \n    // Clear errors when user starts typing\n    if (errors[name]) {\n      setErrors(prev => ({\n        ...prev,\n        [name]: null\n      }));\n    }\n  };\n\n  const validateForm = () => {\n    const newErrors = {};\n\n    if (!formData.name.trim()) {\n      newErrors.name = 'Event name is required';\n    } else if (formData.name.trim().length < 2) {\n      newErrors.name = 'Event name must be at least 2 characters';\n    } else if (formData.name.trim().length > 100) {\n      newErrors.name = 'Event name must be less than 100 characters';\n    }\n\n    if (!formData.projectId) {\n      newErrors.projectId = 'Please select a project';\n    }\n\n    if (!formData.date) {\n      newErrors.date = 'Date is required';\n    } else {\n      const selectedDate = new Date(formData.date + 'T' + (formData.time || '00:00'));\n      const now = new Date();\n      \n      // Check if date is in the past (implement R9.3)\n      if (selectedDate < now) {\n        newErrors.date = 'Date cannot be in the past';\n      }\n    }\n\n    if (!formData.time) {\n      newErrors.time = 'Time is required';\n    }\n\n    // Check deadline constraint (implement R4)\n    if (formData.type === 'deadline' && formData.projectId) {\n      const project = projects.find(p => p.id === formData.projectId);\n      if (project) {\n        // This would need to be checked against existing events in the parent component\n        // For now, we'll let the backend handle this validation\n      }\n    }\n\n    setErrors(newErrors);\n    return Object.keys(newErrors).length === 0;\n  };\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    \n    if (validateForm()) {\n      const eventDateTime = new Date(formData.date + 'T' + formData.time);\n      \n      onSave({\n        name: formData.name.trim(),\n        projectId: formData.projectId,\n        date: eventDateTime.toISOString(),\n        type: formData.type\n      });\n    }\n  };\n\n  const handleOverlayClick = (e) => {\n    if (e.target === e.currentTarget) {\n      onClose();\n    }\n  };\n\n  // Get selected project for preview\n  const selectedProject = projects.find(p => p.id === formData.projectId);\n\n  // Format date for display in DD/MM/YYYY format\n  const formatDateForDisplay = () => {\n    if (formData.date && formData.time) {\n      const eventDate = new Date(formData.date + 'T' + formData.time);\n      const day = eventDate.getDate().toString().padStart(2, '0');\n      const month = (eventDate.getMonth() + 1).toString().padStart(2, '0');\n      const year = eventDate.getFullYear();\n      const time = formData.time;\n      return `${day}/${month}/${year} at ${time}`;\n    }\n    return 'Select date and time';\n  };\n\n  // Helper function to format date in DD/MM/YYYY for input labels\n  const formatDateLabel = (dateString) => {\n    if (!dateString) return '';\n    const date = new Date(dateString);\n    const day = date.getDate().toString().padStart(2, '0');\n    const month = (date.getMonth() + 1).toString().padStart(2, '0');\n    const year = date.getFullYear();\n    return `${day}/${month}/${year}`;\n  };\n\n  return (\n    <div className=\"modal-overlay\" onClick={handleOverlayClick}>\n      <div className=\"modal-content event-modal\">\n        <div className=\"modal-header\">\n          <h3>{event ? 'Edit Event' : 'Create New Event'}</h3>\n          <button className=\"btn btn-ghost btn-sm\" onClick={onClose}>\n            <X size={16} />\n          </button>\n        </div>\n\n        <form onSubmit={handleSubmit}>\n          <div className=\"modal-body\">\n            {/* Event type selection */}\n            <div className=\"form-group\">\n              <label className=\"form-label\">Event Type *</label>\n              <div className=\"event-type-selector\">\n                <label className=\"radio-option\">\n                  <input\n                    type=\"radio\"\n                    name=\"type\"\n                    value=\"milestone\"\n                    checked={formData.type === 'milestone'}\n                    onChange={handleInputChange}\n                  />\n                  <span className=\"radio-label\">\n                    <span className=\"radio-icon milestone\">M</span>\n                    Milestone\n                  </span>\n                  <span className=\"radio-description\">\n                    A significant point or achievement in your project\n                  </span>\n                </label>\n                \n                <label className=\"radio-option\">\n                  <input\n                    type=\"radio\"\n                    name=\"type\"\n                    value=\"deadline\"\n                    checked={formData.type === 'deadline'}\n                    onChange={handleInputChange}\n                  />\n                  <span className=\"radio-label\">\n                    <span className=\"radio-icon deadline\">D</span>\n                    Deadline\n                  </span>\n                  <span className=\"radio-description\">\n                    The final date for project completion\n                  </span>\n                </label>\n              </div>\n            </div>\n\n            {/* Project selection */}\n            <div className=\"form-group\">\n              <label htmlFor=\"eventProject\" className=\"form-label\">\n                Project *\n              </label>\n              <select\n                id=\"eventProject\"\n                name=\"projectId\"\n                className={`input ${errors.projectId ? 'input-error' : ''}`}\n                value={formData.projectId}\n                onChange={handleInputChange}\n              >\n                <option value=\"\">Select a project...</option>\n                {projects.map(project => (\n                  <option key={project.id} value={project.id}>\n                    {project.name}\n                  </option>\n                ))}\n              </select>\n              {errors.projectId && (\n                <div className=\"form-error\">{errors.projectId}</div>\n              )}\n            </div>\n\n            {/* Event name input */}\n            <div className=\"form-group\">\n              <label htmlFor=\"eventName\" className=\"form-label\">\n                Event Name *\n              </label>\n              <input\n                id=\"eventName\"\n                name=\"name\"\n                type=\"text\"\n                className={`input ${errors.name ? 'input-error' : ''}`}\n                value={formData.name}\n                onChange={handleInputChange}\n                placeholder={`Enter ${formData.type} name...`}\n                autoFocus\n              />\n              {errors.name && (\n                <div className=\"form-error\">{errors.name}</div>\n              )}\n            </div>\n\n            {/* Date and time inputs */}\n            <div className=\"form-group\">\n              <label className=\"form-label\">\n                Date and Time *\n              </label>\n              <div className=\"form-help\" style={{ marginBottom: 'var(--spacing-sm)' }}>\n                Please enter the date and time for this event. Your browser will show the date picker in your local format, but the date will always be saved in DD/MM/YYYY format for consistency.\n              </div>\n              <div className=\"datetime-inputs\">\n                <div className=\"date-input-group\">\n                  <Calendar size={16} className=\"input-icon\" />\n                  <input\n                    name=\"date\"\n                    type=\"date\"\n                    className={`input ${errors.date ? 'input-error' : ''}`}\n                    value={formData.date}\n                    onChange={handleInputChange}\n                    min={new Date().toISOString().split('T')[0]}\n                    title={formData.date ? `Selected: ${formatDateLabel(formData.date)}` : 'Select a date'}\n                  />\n                  {formData.date && (\n                    <span className=\"date-display\">{formatDateLabel(formData.date)}</span>\n                  )}\n                </div>\n                \n                <div className=\"time-input-group\">\n                  <Clock size={16} className=\"input-icon\" />\n                  <input\n                    name=\"time\"\n                    type=\"time\"\n                    className={`input ${errors.time ? 'input-error' : ''}`}\n                    value={formData.time}\n                    onChange={handleInputChange}\n                  />\n                </div>\n              </div>\n              {(errors.date || errors.time) && (\n                <div className=\"form-error\">\n                  {errors.date || errors.time}\n                </div>\n              )}\n            </div>\n\n            {/* Event preview */}\n            <div className=\"event-preview\">\n              <div className=\"preview-label\">Preview:</div>\n              <div className=\"preview-event\">\n                <div \n                  className={`event-type-badge ${formData.type}`}\n                  style={{ \n                    backgroundColor: selectedProject?.color || '#6b7280' \n                  }}\n                >\n                  {formData.type}\n                </div>\n                <div className=\"preview-event-details\">\n                  <div className=\"preview-event-name\">\n                    {formData.name || `${formData.type} name`}\n                  </div>\n                  <div className=\"preview-event-project\">\n                    {selectedProject ? (\n                      <span style={{ color: selectedProject.color }}>\n                        {selectedProject.name}\n                      </span>\n                    ) : (\n                      'Select a project'\n                    )}\n                  </div>\n                  <div className=\"preview-event-datetime\">\n                    {formatDateForDisplay()}\n                  </div>\n                </div>\n              </div>\n            </div>\n\n            {/* Warning for deadlines */}\n            {formData.type === 'deadline' && (\n              <div className=\"warning-message\">\n                <strong>Note:</strong> Each project can only have one deadline. \n                If this project already has a deadline, it will be replaced.\n              </div>\n            )}\n          </div>\n\n          <div className=\"modal-footer\">\n            <button type=\"button\" className=\"btn btn-secondary\" onClick={onClose}>\n              Cancel\n            </button>\n            <button type=\"submit\" className=\"btn btn-primary\">\n              {event ? 'Update Event' : 'Create Event'}\n            </button>\n          </div>\n        </form>\n      </div>\n    </div>\n  );\n};\n\nexport default EventModal; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}