{"ast":null,"code":"var _jsxFileName = \"/home/carruc/repos/heat-of-the-day-wip/client/src/components/EventModal.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { X, Calendar, Clock } from 'lucide-react';\nimport './EventModal.css';\n\n// Implements requirement D6: Event creation modal\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst EventModal = ({\n  event,\n  projects,\n  onSave,\n  onClose\n}) => {\n  _s();\n  const [formData, setFormData] = useState({\n    name: '',\n    projectId: '',\n    date: '',\n    time: '',\n    type: 'milestone'\n  });\n  const [errors, setErrors] = useState({});\n  const [dateInput, setDateInput] = useState(''); // For dd/mm/yy format\n\n  // Initialize form data when editing\n  useEffect(() => {\n    if (event) {\n      const eventDate = new Date(event.date);\n      const dateValue = eventDate.toISOString().split('T')[0];\n      setFormData({\n        name: event.name,\n        projectId: event.projectId,\n        date: dateValue,\n        time: eventDate.toTimeString().slice(0, 5),\n        type: event.type\n      });\n      // Set date input to dd/mm/yy format\n      setDateInput(formatDateToShort(dateValue));\n    } else {\n      // Pre-fill with current year when creating new event\n      const currentYear = new Date().getFullYear();\n      const defaultDate = `${currentYear}-01-01`;\n      const defaultTime = '09:00';\n      setFormData(prev => ({\n        ...prev,\n        date: defaultDate,\n        time: defaultTime,\n        projectId: projects.length > 0 ? projects[0].id : ''\n      }));\n      // Set date input to dd/mm/yy format\n      setDateInput(formatDateToShort(defaultDate));\n    }\n  }, [event, projects]);\n  const handleInputChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setFormData(prev => ({\n      ...prev,\n      [name]: value\n    }));\n\n    // Clear errors when user starts typing\n    if (errors[name]) {\n      setErrors(prev => ({\n        ...prev,\n        [name]: null\n      }));\n    }\n  };\n  const validateForm = () => {\n    const newErrors = {};\n    if (!formData.name.trim()) {\n      newErrors.name = 'Event name is required';\n    } else if (formData.name.trim().length < 2) {\n      newErrors.name = 'Event name must be at least 2 characters';\n    } else if (formData.name.trim().length > 100) {\n      newErrors.name = 'Event name must be less than 100 characters';\n    }\n    if (!formData.projectId) {\n      newErrors.projectId = 'Please select a project';\n    }\n    if (!formData.date) {\n      if (dateInput.trim()) {\n        newErrors.date = 'Please enter a valid date in dd/mm/yy format (e.g., 25/12/24)';\n      } else {\n        newErrors.date = 'Date is required';\n      }\n    } else {\n      const selectedDate = new Date(formData.date + 'T' + (formData.time || '00:00'));\n      const now = new Date();\n      const today = new Date(now.getFullYear(), now.getMonth(), now.getDate()); // Start of today\n      const selectedDateOnly = new Date(selectedDate.getFullYear(), selectedDate.getMonth(), selectedDate.getDate());\n\n      // Check if date is in the past (implement R9.3)\n      if (selectedDate < now) {\n        newErrors.date = 'Date cannot be in the past';\n      }\n\n      // Additional validation for deadlines - must be today or after today\n      if (formData.type === 'deadline' && selectedDateOnly < today) {\n        newErrors.date = 'Deadlines must be set for today or a future date';\n      }\n    }\n    if (!formData.time) {\n      newErrors.time = 'Time is required';\n    }\n\n    // Check deadline constraint (implement R4)\n    if (formData.type === 'deadline' && formData.projectId) {\n      const project = projects.find(p => p.id === formData.projectId);\n      if (project) {\n        // This would need to be checked against existing events in the parent component\n        // For now, we'll let the backend handle this validation\n      }\n    }\n    setErrors(newErrors);\n    return Object.keys(newErrors).length === 0;\n  };\n  const handleSubmit = e => {\n    e.preventDefault();\n    if (validateForm()) {\n      const eventDateTime = new Date(formData.date + 'T' + formData.time);\n      onSave({\n        name: formData.name.trim(),\n        projectId: formData.projectId,\n        date: eventDateTime.toISOString(),\n        type: formData.type\n      });\n    }\n  };\n  const handleOverlayClick = e => {\n    if (e.target === e.currentTarget) {\n      onClose();\n    }\n  };\n\n  // Get selected project for preview\n  const selectedProject = projects.find(p => p.id === formData.projectId);\n\n  // Helper function to format date from YYYY-MM-DD to dd/mm/yy\n  const formatDateToShort = dateString => {\n    if (!dateString) return '';\n    const date = new Date(dateString);\n    const day = date.getDate().toString().padStart(2, '0');\n    const month = (date.getMonth() + 1).toString().padStart(2, '0');\n    const year = date.getFullYear().toString().slice(-2); // Last 2 digits\n    return `${day}/${month}/${year}`;\n  };\n\n  // Helper function to parse dd/mm/yy format\n  const parseDateInput = dateStr => {\n    const parts = dateStr.split(/[/.-]/);\n    if (parts.length === 3) {\n      const day = parseInt(parts[0], 10);\n      const month = parseInt(parts[1], 10);\n      let year = parseInt(parts[2], 10);\n\n      // Convert 2-digit year to 4-digit year\n      if (year >= 0 && year <= 30) {\n        year += 2000; // 00-30 -> 2000-2030\n      } else if (year >= 31 && year <= 99) {\n        year += 1900; // 31-99 -> 1931-1999\n      } else if (year >= 1900) {\n        // Already 4-digit year, keep as is\n      } else {\n        return null; // Invalid year\n      }\n      if (day >= 1 && day <= 31 && month >= 1 && month <= 12) {\n        // Convert to YYYY-MM-DD format for internal use\n        return `${year}-${month.toString().padStart(2, '0')}-${day.toString().padStart(2, '0')}`;\n      }\n    }\n    return null;\n  };\n\n  // Handle date input change\n  const handleDateInputChange = e => {\n    let value = e.target.value;\n\n    // Remove all non-numeric characters except slashes\n    value = value.replace(/[^\\d/]/g, '');\n\n    // Auto-format with slashes as user types\n    if (value.length >= 2 && value.charAt(2) !== '/') {\n      value = value.substring(0, 2) + '/' + value.substring(2);\n    }\n    if (value.length >= 5 && value.charAt(5) !== '/') {\n      value = value.substring(0, 5) + '/' + value.substring(5);\n    }\n\n    // Limit to 8 characters (dd/mm/yy)\n    if (value.length > 8) {\n      value = value.substring(0, 8);\n    }\n    setDateInput(value);\n\n    // Only try to parse if we have a complete date (8 characters: dd/mm/yy)\n    if (value.length === 8) {\n      const parsedDate = parseDateInput(value);\n      if (parsedDate) {\n        // Additional validation for deadlines\n        if (formData.type === 'deadline') {\n          const selectedDate = new Date(parsedDate);\n          const today = new Date();\n          today.setHours(0, 0, 0, 0); // Start of today\n\n          if (selectedDate < today) {\n            setFormData(prev => ({\n              ...prev,\n              date: ''\n            }));\n            return; // Don't set invalid deadline date\n          }\n        }\n        setFormData(prev => ({\n          ...prev,\n          date: parsedDate\n        }));\n        if (errors.date) {\n          setErrors(prev => ({\n            ...prev,\n            date: null\n          }));\n        }\n      } else {\n        // Clear the internal date if input is invalid\n        setFormData(prev => ({\n          ...prev,\n          date: ''\n        }));\n      }\n    } else {\n      // Clear the internal date if input is incomplete\n      setFormData(prev => ({\n        ...prev,\n        date: ''\n      }));\n    }\n  };\n\n  // Handle key press for date input to prevent invalid characters\n  const handleDateKeyPress = e => {\n    // Allow backspace, delete, tab, escape, enter\n    if ([8, 9, 27, 13, 46].indexOf(e.keyCode) !== -1 ||\n    // Allow Ctrl+A, Ctrl+C, Ctrl+V, Ctrl+X\n    e.keyCode === 65 && e.ctrlKey === true || e.keyCode === 67 && e.ctrlKey === true || e.keyCode === 86 && e.ctrlKey === true || e.keyCode === 88 && e.ctrlKey === true) {\n      return;\n    }\n    // Ensure that it is a number or slash and stop the keypress\n    if ((e.shiftKey || e.keyCode < 48 || e.keyCode > 57) && (e.keyCode < 96 || e.keyCode > 105) && e.keyCode !== 191) {\n      e.preventDefault();\n    }\n  };\n\n  // Format date for display in DD/MM/YYYY format (always show DD/MM/YYYY regardless of browser locale)\n  const formatDateForDisplay = () => {\n    if (formData.date && formData.time) {\n      const eventDate = new Date(formData.date + 'T' + formData.time);\n      const day = eventDate.getDate().toString().padStart(2, '0');\n      const month = (eventDate.getMonth() + 1).toString().padStart(2, '0');\n      const year = eventDate.getFullYear();\n      const time = formData.time;\n      return `${day}/${month}/${year} at ${time}`;\n    }\n    return 'Select date and time';\n  };\n\n  // Format date for display in DD/MM/YYYY format (4-digit year)\n  const formatDateLong = dateString => {\n    if (!dateString) return '';\n    const date = new Date(dateString);\n    const day = date.getDate().toString().padStart(2, '0');\n    const month = (date.getMonth() + 1).toString().padStart(2, '0');\n    const year = date.getFullYear();\n    return `${day}/${month}/${year}`;\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"modal-overlay\",\n    onClick: handleOverlayClick,\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"modal-content event-modal\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"modal-header\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: event ? 'Edit Event' : 'Create New Event'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 276,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"btn btn-ghost btn-sm\",\n          onClick: onClose,\n          children: /*#__PURE__*/_jsxDEV(X, {\n            size: 16\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 278,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 277,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 275,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleSubmit,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"modal-body\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-group\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              className: \"form-label\",\n              children: \"Event Type *\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 286,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"event-type-selector\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                className: \"radio-option\",\n                children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"radio\",\n                  name: \"type\",\n                  value: \"milestone\",\n                  checked: formData.type === 'milestone',\n                  onChange: handleInputChange\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 289,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"radio-label\",\n                  children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                    className: \"radio-icon milestone\",\n                    children: \"M\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 297,\n                    columnNumber: 21\n                  }, this), \"Milestone\"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 296,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"radio-description\",\n                  children: \"A significant point or achievement in your project\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 300,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 288,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n                className: \"radio-option\",\n                children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"radio\",\n                  name: \"type\",\n                  value: \"deadline\",\n                  checked: formData.type === 'deadline',\n                  onChange: handleInputChange\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 306,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"radio-label\",\n                  children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                    className: \"radio-icon deadline\",\n                    children: \"D\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 314,\n                    columnNumber: 21\n                  }, this), \"Deadline\"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 313,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"radio-description\",\n                  children: \"The final date for project completion\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 317,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 305,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 287,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 285,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-group\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"eventProject\",\n              className: \"form-label\",\n              children: \"Project *\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 326,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n              id: \"eventProject\",\n              name: \"projectId\",\n              className: `input ${errors.projectId ? 'input-error' : ''}`,\n              value: formData.projectId,\n              onChange: handleInputChange,\n              children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"\",\n                children: \"Select a project...\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 336,\n                columnNumber: 17\n              }, this), projects.map(project => /*#__PURE__*/_jsxDEV(\"option\", {\n                value: project.id,\n                children: project.name\n              }, project.id, false, {\n                fileName: _jsxFileName,\n                lineNumber: 338,\n                columnNumber: 19\n              }, this))]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 329,\n              columnNumber: 15\n            }, this), errors.projectId && /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"form-error\",\n              children: errors.projectId\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 344,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 325,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-group\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"eventName\",\n              className: \"form-label\",\n              children: \"Event Name *\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 350,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              id: \"eventName\",\n              name: \"name\",\n              type: \"text\",\n              className: `input ${errors.name ? 'input-error' : ''}`,\n              value: formData.name,\n              onChange: handleInputChange,\n              placeholder: `Enter ${formData.type} name...`,\n              autoFocus: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 353,\n              columnNumber: 15\n            }, this), errors.name && /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"form-error\",\n              children: errors.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 364,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 349,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-group\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              className: \"form-label\",\n              children: \"Date and Time *\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 370,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"form-help\",\n              style: {\n                marginBottom: 'var(--spacing-sm)'\n              },\n              children: [\"Please enter the date in \", /*#__PURE__*/_jsxDEV(\"strong\", {\n                children: \"dd/mm/yy\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 374,\n                columnNumber: 42\n              }, this), \" format (e.g., 25/12/24 for December 25, 2024). Years 00-30 are interpreted as 2000-2030, and years 31-99 as 1931-1999.\", formData.type === 'deadline' && /*#__PURE__*/_jsxDEV(\"div\", {\n                style: {\n                  marginTop: '4px',\n                  padding: '6px',\n                  backgroundColor: '#dbeafe',\n                  border: '1px solid #3b82f6',\n                  borderRadius: '4px',\n                  fontSize: '0.75rem',\n                  color: '#1e40af'\n                },\n                children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                  children: \"Deadline requirement:\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 378,\n                  columnNumber: 21\n                }, this), \" Must be set for today or a future date.\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 377,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 373,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"datetime-inputs\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"date-input-group\",\n                children: [/*#__PURE__*/_jsxDEV(Calendar, {\n                  size: 16,\n                  className: \"input-icon\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 384,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                  name: \"date\",\n                  type: \"text\",\n                  className: `input ${errors.date ? 'input-error' : ''}`,\n                  value: dateInput,\n                  onChange: handleDateInputChange,\n                  onKeyDown: handleDateKeyPress,\n                  placeholder: \"dd/mm/yy\",\n                  title: \"Enter date in dd/mm/yy format (e.g., 25/12/24)\",\n                  maxLength: 8\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 385,\n                  columnNumber: 19\n                }, this), formData.date && /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"date-display\",\n                  style: {\n                    fontSize: '0.75rem',\n                    color: 'var(--success-color)',\n                    marginLeft: '8px'\n                  },\n                  children: [\"\\u2713 \", formatDateLong(formData.date)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 397,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 383,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"time-input-group\",\n                children: [/*#__PURE__*/_jsxDEV(Clock, {\n                  size: 16,\n                  className: \"input-icon\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 404,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                  name: \"time\",\n                  type: \"time\",\n                  className: `input ${errors.time ? 'input-error' : ''}`,\n                  value: formData.time,\n                  onChange: handleInputChange\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 405,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 403,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 382,\n              columnNumber: 15\n            }, this), (errors.date || errors.time) && /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"form-error\",\n              children: errors.date || errors.time\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 415,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 369,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"event-preview\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"preview-label\",\n              children: \"Preview:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 423,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"preview-event\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: `event-type-badge ${formData.type}`,\n                style: {\n                  backgroundColor: (selectedProject === null || selectedProject === void 0 ? void 0 : selectedProject.color) || '#6b7280'\n                },\n                children: formData.type\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 425,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"preview-event-details\",\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"preview-event-name\",\n                  children: formData.name || `${formData.type} name`\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 434,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"preview-event-project\",\n                  children: selectedProject ? /*#__PURE__*/_jsxDEV(\"span\", {\n                    style: {\n                      color: selectedProject.color\n                    },\n                    children: selectedProject.name\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 439,\n                    columnNumber: 23\n                  }, this) : 'Select a project'\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 437,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"preview-event-datetime\",\n                  children: formatDateForDisplay()\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 446,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 433,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 424,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 422,\n            columnNumber: 13\n          }, this), formData.type === 'deadline' && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"warning-message\",\n            children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n              children: \"Note:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 456,\n              columnNumber: 17\n            }, this), \" Each project can only have one deadline. If this project already has a deadline, it will be replaced.\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 455,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 283,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"modal-footer\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"button\",\n            className: \"btn btn-secondary\",\n            onClick: onClose,\n            children: \"Cancel\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 463,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"submit\",\n            className: \"btn btn-primary\",\n            children: event ? 'Update Event' : 'Create Event'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 466,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 462,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 282,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 274,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 273,\n    columnNumber: 5\n  }, this);\n};\n_s(EventModal, \"Xv4jpnV3tzK7wOoxV5p0mWsd9jY=\");\n_c = EventModal;\nexport default EventModal;\nvar _c;\n$RefreshReg$(_c, \"EventModal\");","map":{"version":3,"names":["React","useState","useEffect","X","Calendar","Clock","jsxDEV","_jsxDEV","EventModal","event","projects","onSave","onClose","_s","formData","setFormData","name","projectId","date","time","type","errors","setErrors","dateInput","setDateInput","eventDate","Date","dateValue","toISOString","split","toTimeString","slice","formatDateToShort","currentYear","getFullYear","defaultDate","defaultTime","prev","length","id","handleInputChange","e","value","target","validateForm","newErrors","trim","selectedDate","now","today","getMonth","getDate","selectedDateOnly","project","find","p","Object","keys","handleSubmit","preventDefault","eventDateTime","handleOverlayClick","currentTarget","selectedProject","dateString","day","toString","padStart","month","year","parseDateInput","dateStr","parts","parseInt","handleDateInputChange","replace","charAt","substring","parsedDate","setHours","handleDateKeyPress","indexOf","keyCode","ctrlKey","shiftKey","formatDateForDisplay","formatDateLong","className","onClick","children","fileName","_jsxFileName","lineNumber","columnNumber","size","onSubmit","checked","onChange","htmlFor","map","placeholder","autoFocus","style","marginBottom","marginTop","padding","backgroundColor","border","borderRadius","fontSize","color","onKeyDown","title","maxLength","marginLeft","_c","$RefreshReg$"],"sources":["/home/carruc/repos/heat-of-the-day-wip/client/src/components/EventModal.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { X, Calendar, Clock } from 'lucide-react';\nimport './EventModal.css';\n\n// Implements requirement D6: Event creation modal\nconst EventModal = ({ event, projects, onSave, onClose }) => {\n  const [formData, setFormData] = useState({\n    name: '',\n    projectId: '',\n    date: '',\n    time: '',\n    type: 'milestone'\n  });\n  const [errors, setErrors] = useState({});\n  const [dateInput, setDateInput] = useState(''); // For dd/mm/yy format\n\n  // Initialize form data when editing\n  useEffect(() => {\n    if (event) {\n      const eventDate = new Date(event.date);\n      const dateValue = eventDate.toISOString().split('T')[0];\n      setFormData({\n        name: event.name,\n        projectId: event.projectId,\n        date: dateValue,\n        time: eventDate.toTimeString().slice(0, 5),\n        type: event.type\n      });\n      // Set date input to dd/mm/yy format\n      setDateInput(formatDateToShort(dateValue));\n    } else {\n      // Pre-fill with current year when creating new event\n      const currentYear = new Date().getFullYear();\n      const defaultDate = `${currentYear}-01-01`;\n      const defaultTime = '09:00';\n      \n      setFormData(prev => ({\n        ...prev,\n        date: defaultDate,\n        time: defaultTime,\n        projectId: projects.length > 0 ? projects[0].id : ''\n      }));\n      // Set date input to dd/mm/yy format\n      setDateInput(formatDateToShort(defaultDate));\n    }\n  }, [event, projects]);\n\n  const handleInputChange = (e) => {\n    const { name, value } = e.target;\n    setFormData(prev => ({\n      ...prev,\n      [name]: value\n    }));\n    \n    // Clear errors when user starts typing\n    if (errors[name]) {\n      setErrors(prev => ({\n        ...prev,\n        [name]: null\n      }));\n    }\n  };\n\n  const validateForm = () => {\n    const newErrors = {};\n\n    if (!formData.name.trim()) {\n      newErrors.name = 'Event name is required';\n    } else if (formData.name.trim().length < 2) {\n      newErrors.name = 'Event name must be at least 2 characters';\n    } else if (formData.name.trim().length > 100) {\n      newErrors.name = 'Event name must be less than 100 characters';\n    }\n\n    if (!formData.projectId) {\n      newErrors.projectId = 'Please select a project';\n    }\n\n    if (!formData.date) {\n      if (dateInput.trim()) {\n        newErrors.date = 'Please enter a valid date in dd/mm/yy format (e.g., 25/12/24)';\n      } else {\n        newErrors.date = 'Date is required';\n      }\n    } else {\n      const selectedDate = new Date(formData.date + 'T' + (formData.time || '00:00'));\n      const now = new Date();\n      const today = new Date(now.getFullYear(), now.getMonth(), now.getDate()); // Start of today\n      const selectedDateOnly = new Date(selectedDate.getFullYear(), selectedDate.getMonth(), selectedDate.getDate());\n      \n      // Check if date is in the past (implement R9.3)\n      if (selectedDate < now) {\n        newErrors.date = 'Date cannot be in the past';\n      }\n      \n      // Additional validation for deadlines - must be today or after today\n      if (formData.type === 'deadline' && selectedDateOnly < today) {\n        newErrors.date = 'Deadlines must be set for today or a future date';\n      }\n    }\n\n    if (!formData.time) {\n      newErrors.time = 'Time is required';\n    }\n\n    // Check deadline constraint (implement R4)\n    if (formData.type === 'deadline' && formData.projectId) {\n      const project = projects.find(p => p.id === formData.projectId);\n      if (project) {\n        // This would need to be checked against existing events in the parent component\n        // For now, we'll let the backend handle this validation\n      }\n    }\n\n    setErrors(newErrors);\n    return Object.keys(newErrors).length === 0;\n  };\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    \n    if (validateForm()) {\n      const eventDateTime = new Date(formData.date + 'T' + formData.time);\n      \n      onSave({\n        name: formData.name.trim(),\n        projectId: formData.projectId,\n        date: eventDateTime.toISOString(),\n        type: formData.type\n      });\n    }\n  };\n\n  const handleOverlayClick = (e) => {\n    if (e.target === e.currentTarget) {\n      onClose();\n    }\n  };\n\n  // Get selected project for preview\n  const selectedProject = projects.find(p => p.id === formData.projectId);\n\n  // Helper function to format date from YYYY-MM-DD to dd/mm/yy\n  const formatDateToShort = (dateString) => {\n    if (!dateString) return '';\n    const date = new Date(dateString);\n    const day = date.getDate().toString().padStart(2, '0');\n    const month = (date.getMonth() + 1).toString().padStart(2, '0');\n    const year = date.getFullYear().toString().slice(-2); // Last 2 digits\n    return `${day}/${month}/${year}`;\n  };\n\n  // Helper function to parse dd/mm/yy format\n  const parseDateInput = (dateStr) => {\n    const parts = dateStr.split(/[/.-]/);\n    if (parts.length === 3) {\n      const day = parseInt(parts[0], 10);\n      const month = parseInt(parts[1], 10);\n      let year = parseInt(parts[2], 10);\n      \n      // Convert 2-digit year to 4-digit year\n      if (year >= 0 && year <= 30) {\n        year += 2000; // 00-30 -> 2000-2030\n      } else if (year >= 31 && year <= 99) {\n        year += 1900; // 31-99 -> 1931-1999\n      } else if (year >= 1900) {\n        // Already 4-digit year, keep as is\n      } else {\n        return null; // Invalid year\n      }\n      \n      if (day >= 1 && day <= 31 && month >= 1 && month <= 12) {\n        // Convert to YYYY-MM-DD format for internal use\n        return `${year}-${month.toString().padStart(2, '0')}-${day.toString().padStart(2, '0')}`;\n      }\n    }\n    return null;\n  };\n\n  // Handle date input change\n  const handleDateInputChange = (e) => {\n    let value = e.target.value;\n    \n    // Remove all non-numeric characters except slashes\n    value = value.replace(/[^\\d/]/g, '');\n    \n    // Auto-format with slashes as user types\n    if (value.length >= 2 && value.charAt(2) !== '/') {\n      value = value.substring(0, 2) + '/' + value.substring(2);\n    }\n    if (value.length >= 5 && value.charAt(5) !== '/') {\n      value = value.substring(0, 5) + '/' + value.substring(5);\n    }\n    \n    // Limit to 8 characters (dd/mm/yy)\n    if (value.length > 8) {\n      value = value.substring(0, 8);\n    }\n    \n    setDateInput(value);\n    \n    // Only try to parse if we have a complete date (8 characters: dd/mm/yy)\n    if (value.length === 8) {\n      const parsedDate = parseDateInput(value);\n      if (parsedDate) {\n        // Additional validation for deadlines\n        if (formData.type === 'deadline') {\n          const selectedDate = new Date(parsedDate);\n          const today = new Date();\n          today.setHours(0, 0, 0, 0); // Start of today\n          \n          if (selectedDate < today) {\n            setFormData(prev => ({ ...prev, date: '' }));\n            return; // Don't set invalid deadline date\n          }\n        }\n        \n        setFormData(prev => ({ ...prev, date: parsedDate }));\n        if (errors.date) {\n          setErrors(prev => ({ ...prev, date: null }));\n        }\n      } else {\n        // Clear the internal date if input is invalid\n        setFormData(prev => ({ ...prev, date: '' }));\n      }\n    } else {\n      // Clear the internal date if input is incomplete\n      setFormData(prev => ({ ...prev, date: '' }));\n    }\n  };\n\n  // Handle key press for date input to prevent invalid characters\n  const handleDateKeyPress = (e) => {\n    // Allow backspace, delete, tab, escape, enter\n    if ([8, 9, 27, 13, 46].indexOf(e.keyCode) !== -1 ||\n        // Allow Ctrl+A, Ctrl+C, Ctrl+V, Ctrl+X\n        (e.keyCode === 65 && e.ctrlKey === true) ||\n        (e.keyCode === 67 && e.ctrlKey === true) ||\n        (e.keyCode === 86 && e.ctrlKey === true) ||\n        (e.keyCode === 88 && e.ctrlKey === true)) {\n      return;\n    }\n    // Ensure that it is a number or slash and stop the keypress\n    if ((e.shiftKey || (e.keyCode < 48 || e.keyCode > 57)) && (e.keyCode < 96 || e.keyCode > 105) && e.keyCode !== 191) {\n      e.preventDefault();\n    }\n  };\n\n  // Format date for display in DD/MM/YYYY format (always show DD/MM/YYYY regardless of browser locale)\n  const formatDateForDisplay = () => {\n    if (formData.date && formData.time) {\n      const eventDate = new Date(formData.date + 'T' + formData.time);\n      const day = eventDate.getDate().toString().padStart(2, '0');\n      const month = (eventDate.getMonth() + 1).toString().padStart(2, '0');\n      const year = eventDate.getFullYear();\n      const time = formData.time;\n      return `${day}/${month}/${year} at ${time}`;\n    }\n    return 'Select date and time';\n  };\n\n  // Format date for display in DD/MM/YYYY format (4-digit year)\n  const formatDateLong = (dateString) => {\n    if (!dateString) return '';\n    const date = new Date(dateString);\n    const day = date.getDate().toString().padStart(2, '0');\n    const month = (date.getMonth() + 1).toString().padStart(2, '0');\n    const year = date.getFullYear();\n    return `${day}/${month}/${year}`;\n  };\n\n  return (\n    <div className=\"modal-overlay\" onClick={handleOverlayClick}>\n      <div className=\"modal-content event-modal\">\n        <div className=\"modal-header\">\n          <h3>{event ? 'Edit Event' : 'Create New Event'}</h3>\n          <button className=\"btn btn-ghost btn-sm\" onClick={onClose}>\n            <X size={16} />\n          </button>\n        </div>\n\n        <form onSubmit={handleSubmit}>\n          <div className=\"modal-body\">\n            {/* Event type selection */}\n            <div className=\"form-group\">\n              <label className=\"form-label\">Event Type *</label>\n              <div className=\"event-type-selector\">\n                <label className=\"radio-option\">\n                  <input\n                    type=\"radio\"\n                    name=\"type\"\n                    value=\"milestone\"\n                    checked={formData.type === 'milestone'}\n                    onChange={handleInputChange}\n                  />\n                  <span className=\"radio-label\">\n                    <span className=\"radio-icon milestone\">M</span>\n                    Milestone\n                  </span>\n                  <span className=\"radio-description\">\n                    A significant point or achievement in your project\n                  </span>\n                </label>\n                \n                <label className=\"radio-option\">\n                  <input\n                    type=\"radio\"\n                    name=\"type\"\n                    value=\"deadline\"\n                    checked={formData.type === 'deadline'}\n                    onChange={handleInputChange}\n                  />\n                  <span className=\"radio-label\">\n                    <span className=\"radio-icon deadline\">D</span>\n                    Deadline\n                  </span>\n                  <span className=\"radio-description\">\n                    The final date for project completion\n                  </span>\n                </label>\n              </div>\n            </div>\n\n            {/* Project selection */}\n            <div className=\"form-group\">\n              <label htmlFor=\"eventProject\" className=\"form-label\">\n                Project *\n              </label>\n              <select\n                id=\"eventProject\"\n                name=\"projectId\"\n                className={`input ${errors.projectId ? 'input-error' : ''}`}\n                value={formData.projectId}\n                onChange={handleInputChange}\n              >\n                <option value=\"\">Select a project...</option>\n                {projects.map(project => (\n                  <option key={project.id} value={project.id}>\n                    {project.name}\n                  </option>\n                ))}\n              </select>\n              {errors.projectId && (\n                <div className=\"form-error\">{errors.projectId}</div>\n              )}\n            </div>\n\n            {/* Event name input */}\n            <div className=\"form-group\">\n              <label htmlFor=\"eventName\" className=\"form-label\">\n                Event Name *\n              </label>\n              <input\n                id=\"eventName\"\n                name=\"name\"\n                type=\"text\"\n                className={`input ${errors.name ? 'input-error' : ''}`}\n                value={formData.name}\n                onChange={handleInputChange}\n                placeholder={`Enter ${formData.type} name...`}\n                autoFocus\n              />\n              {errors.name && (\n                <div className=\"form-error\">{errors.name}</div>\n              )}\n            </div>\n\n            {/* Date and time inputs */}\n            <div className=\"form-group\">\n              <label className=\"form-label\">\n                Date and Time *\n              </label>\n              <div className=\"form-help\" style={{ marginBottom: 'var(--spacing-sm)' }}>\n                Please enter the date in <strong>dd/mm/yy</strong> format (e.g., 25/12/24 for December 25, 2024).\n                Years 00-30 are interpreted as 2000-2030, and years 31-99 as 1931-1999.\n                {formData.type === 'deadline' && (\n                  <div style={{ marginTop: '4px', padding: '6px', backgroundColor: '#dbeafe', border: '1px solid #3b82f6', borderRadius: '4px', fontSize: '0.75rem', color: '#1e40af' }}>\n                    <strong>Deadline requirement:</strong> Must be set for today or a future date.\n                  </div>\n                )}\n              </div>\n              <div className=\"datetime-inputs\">\n                <div className=\"date-input-group\">\n                  <Calendar size={16} className=\"input-icon\" />\n                  <input\n                    name=\"date\"\n                    type=\"text\"\n                    className={`input ${errors.date ? 'input-error' : ''}`}\n                    value={dateInput}\n                    onChange={handleDateInputChange}\n                    onKeyDown={handleDateKeyPress}\n                    placeholder=\"dd/mm/yy\"\n                    title=\"Enter date in dd/mm/yy format (e.g., 25/12/24)\"\n                    maxLength={8}\n                  />\n                  {formData.date && (\n                    <span className=\"date-display\" style={{ fontSize: '0.75rem', color: 'var(--success-color)', marginLeft: '8px' }}>\n                      ✓ {formatDateLong(formData.date)}\n                    </span>\n                  )}\n                </div>\n                \n                <div className=\"time-input-group\">\n                  <Clock size={16} className=\"input-icon\" />\n                  <input\n                    name=\"time\"\n                    type=\"time\"\n                    className={`input ${errors.time ? 'input-error' : ''}`}\n                    value={formData.time}\n                    onChange={handleInputChange}\n                  />\n                </div>\n              </div>\n              {(errors.date || errors.time) && (\n                <div className=\"form-error\">\n                  {errors.date || errors.time}\n                </div>\n              )}\n            </div>\n\n            {/* Event preview */}\n            <div className=\"event-preview\">\n              <div className=\"preview-label\">Preview:</div>\n              <div className=\"preview-event\">\n                <div \n                  className={`event-type-badge ${formData.type}`}\n                  style={{ \n                    backgroundColor: selectedProject?.color || '#6b7280' \n                  }}\n                >\n                  {formData.type}\n                </div>\n                <div className=\"preview-event-details\">\n                  <div className=\"preview-event-name\">\n                    {formData.name || `${formData.type} name`}\n                  </div>\n                  <div className=\"preview-event-project\">\n                    {selectedProject ? (\n                      <span style={{ color: selectedProject.color }}>\n                        {selectedProject.name}\n                      </span>\n                    ) : (\n                      'Select a project'\n                    )}\n                  </div>\n                  <div className=\"preview-event-datetime\">\n                    {formatDateForDisplay()}\n                  </div>\n                </div>\n              </div>\n            </div>\n\n            {/* Warning for deadlines */}\n            {formData.type === 'deadline' && (\n              <div className=\"warning-message\">\n                <strong>Note:</strong> Each project can only have one deadline. \n                If this project already has a deadline, it will be replaced.\n              </div>\n            )}\n          </div>\n\n          <div className=\"modal-footer\">\n            <button type=\"button\" className=\"btn btn-secondary\" onClick={onClose}>\n              Cancel\n            </button>\n            <button type=\"submit\" className=\"btn btn-primary\">\n              {event ? 'Update Event' : 'Create Event'}\n            </button>\n          </div>\n        </form>\n      </div>\n    </div>\n  );\n};\n\nexport default EventModal; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}