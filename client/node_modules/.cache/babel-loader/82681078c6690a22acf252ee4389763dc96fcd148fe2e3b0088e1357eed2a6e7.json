{"ast":null,"code":"// API service for Heat of the Day application\n// Handles all backend communication and error management\n\nconst BASE_URL = '/api';\nclass ApiError extends Error {\n  constructor(message, status, data) {\n    super(message);\n    this.name = 'ApiError';\n    this.status = status;\n    this.data = data;\n  }\n}\nconst handleResponse = async response => {\n  if (!response.ok) {\n    let errorMessage = 'Network error occurred';\n    try {\n      const errorData = await response.json();\n      errorMessage = errorData.error || errorMessage;\n    } catch {\n      // If JSON parsing fails, use default message\n    }\n    throw new ApiError(errorMessage, response.status);\n  }\n\n  // Handle 204 No Content responses\n  if (response.status === 204) {\n    return null;\n  }\n  try {\n    return await response.json();\n  } catch {\n    throw new ApiError('Invalid response format', response.status);\n  }\n};\nconst makeRequest = async (url, options = {}) => {\n  const config = {\n    headers: {\n      'Content-Type': 'application/json',\n      ...options.headers\n    },\n    ...options\n  };\n  if (config.body && typeof config.body !== 'string') {\n    config.body = JSON.stringify(config.body);\n  }\n  try {\n    const response = await fetch(`${BASE_URL}${url}`, config);\n    return await handleResponse(response);\n  } catch (error) {\n    if (error instanceof ApiError) {\n      throw error;\n    }\n    throw new ApiError('Network connection failed', 0);\n  }\n};\nexport const apiService = {\n  // Project endpoints - Implements R1.1, R1.2, R2.1, R2.2, R3.1, R3.2\n  async getProjects() {\n    return makeRequest('/projects');\n  },\n  async createProject(projectData) {\n    return makeRequest('/projects', {\n      method: 'POST',\n      body: projectData\n    });\n  },\n  async updateProject(projectId, updates) {\n    return makeRequest(`/projects/${projectId}`, {\n      method: 'PUT',\n      body: updates\n    });\n  },\n  async deleteProject(projectId) {\n    return makeRequest(`/projects/${projectId}`, {\n      method: 'DELETE'\n    });\n  },\n  // Event endpoints - Implements R7.1, R7.2, R8.1, R8.2, R9.1, R9.2, R9.3, R4, R5.1, R5.2\n  async getEvents(projectId = null) {\n    const url = projectId ? `/events?projectId=${projectId}` : '/events';\n    return makeRequest(url);\n  },\n  async createEvent(eventData) {\n    return makeRequest('/events', {\n      method: 'POST',\n      body: eventData\n    });\n  },\n  async updateEvent(eventId, updates) {\n    return makeRequest(`/events/${eventId}`, {\n      method: 'PUT',\n      body: updates\n    });\n  },\n  async deleteEvent(eventId) {\n    return makeRequest(`/events/${eventId}`, {\n      method: 'DELETE'\n    });\n  },\n  // Task endpoints - Implements R10.1, R10.2, R11.1, R11.2, R12.1, R12.2, R12.3, R13.1, R13.2, R6.1, R6.2\n  async getTasks(projectId = null) {\n    const url = projectId ? `/tasks?projectId=${projectId}` : '/tasks';\n    return makeRequest(url);\n  },\n  async createTask(taskData) {\n    return makeRequest('/tasks', {\n      method: 'POST',\n      body: taskData\n    });\n  },\n  async updateTask(taskId, updates) {\n    return makeRequest(`/tasks/${taskId}`, {\n      method: 'PUT',\n      body: updates\n    });\n  },\n  async deleteTask(taskId) {\n    return makeRequest(`/tasks/${taskId}`, {\n      method: 'DELETE'\n    });\n  },\n  // Analytics endpoints for heatmap visualization\n  async getHeatmapData(startDate = null, endDate = null, timeScale = 1) {\n    const params = new URLSearchParams();\n    if (startDate) params.append('startDate', startDate);\n    if (endDate) params.append('endDate', endDate);\n    if (timeScale) params.append('timeScale', timeScale.toString());\n    const url = `/analytics/heatmap${params.toString() ? '?' + params.toString() : ''}`;\n    return makeRequest(url);\n  }\n};\n\n// Helper functions for data processing\nexport const dataUtils = {\n  // Sort projects by order\n  sortProjects(projects) {\n    return [...projects].sort((a, b) => a.order - b.order);\n  },\n  // Filter visible projects (not hidden)\n  getVisibleProjects(projects) {\n    return projects.filter(p => !p.hidden);\n  },\n  // Filter hidden projects\n  getHiddenProjects(projects) {\n    return projects.filter(p => p.hidden);\n  },\n  // Get tasks for a specific project\n  getProjectTasks(tasks, projectId) {\n    return tasks.filter(t => t.projectId === projectId);\n  },\n  // Get events for a specific project\n  getProjectEvents(events, projectId) {\n    return events.filter(e => e.projectId === projectId);\n  },\n  // Get completed tasks count for a project on a specific date\n  getCompletedTasksCount(tasks, projectId, date) {\n    const projectTasks = this.getProjectTasks(tasks, projectId);\n    return projectTasks.filter(task => {\n      if (!task.completed) return false;\n      const taskDate = new Date(task.createdAt).toDateString();\n      const targetDate = new Date(date).toDateString();\n      return taskDate === targetDate;\n    }).length;\n  },\n  // Get events for a specific date\n  getEventsForDate(events, date) {\n    const targetDate = new Date(date).toDateString();\n    return events.filter(event => {\n      const eventDate = new Date(event.date).toDateString();\n      return eventDate === targetDate;\n    });\n  },\n  // Calculate heatmap intensity (0-1) based on task completion\n  getHeatmapIntensity(completedCount, maxTasks = 10) {\n    return Math.min(completedCount / maxTasks, 1);\n  },\n  // Generate color with opacity based on project color and intensity\n  getHeatmapCellColor(projectColor, intensity) {\n    // Convert hex to RGB and apply opacity\n    const hex = projectColor.replace('#', '');\n    const r = parseInt(hex.substr(0, 2), 16);\n    const g = parseInt(hex.substr(2, 2), 16);\n    const b = parseInt(hex.substr(4, 2), 16);\n    const opacity = Math.max(0.1, intensity); // Minimum opacity for visibility\n    return `rgba(${r}, ${g}, ${b}, ${opacity})`;\n  },\n  // Format date for display\n  formatDate(date, format = 'short') {\n    const d = new Date(date);\n    switch (format) {\n      case 'short':\n        return d.toLocaleDateString('en-US', {\n          month: 'short',\n          day: 'numeric'\n        });\n      case 'long':\n        return d.toLocaleDateString('en-US', {\n          weekday: 'long',\n          year: 'numeric',\n          month: 'long',\n          day: 'numeric'\n        });\n      case 'time':\n        return d.toLocaleTimeString('en-US', {\n          hour: '2-digit',\n          minute: '2-digit'\n        });\n      case 'datetime':\n        return d.toLocaleString('en-US', {\n          year: 'numeric',\n          month: 'short',\n          day: 'numeric',\n          hour: '2-digit',\n          minute: '2-digit'\n        });\n      default:\n        return d.toLocaleDateString();\n    }\n  },\n  // Generate date range for heatmap\n  generateDateRange(centerDate, timeScale, daysToShow = 30) {\n    const dates = [];\n    const today = new Date();\n\n    // Start from 7 days ago\n    const startDate = new Date(today);\n    startDate.setDate(today.getDate() - 7);\n    for (let i = 0; i < daysToShow; i += timeScale) {\n      const date = new Date(startDate);\n      date.setDate(startDate.getDate() + i);\n      dates.push(new Date(date));\n    }\n    return dates;\n  },\n  // Check if project has deadline\n  hasDeadline(events, projectId) {\n    return events.some(e => e.projectId === projectId && e.type === 'deadline');\n  },\n  // Get project deadline\n  getProjectDeadline(events, projectId) {\n    return events.find(e => e.projectId === projectId && e.type === 'deadline');\n  },\n  // Get project milestones\n  getProjectMilestones(events, projectId) {\n    return events.filter(e => e.projectId === projectId && e.type === 'milestone');\n  },\n  // Validate task assignment to event\n  validateTaskEventAssignment(task, event) {\n    if (!event) return true; // No event assignment is valid\n    return task.projectId === event.projectId;\n  }\n};","map":{"version":3,"names":["BASE_URL","ApiError","Error","constructor","message","status","data","name","handleResponse","response","ok","errorMessage","errorData","json","error","makeRequest","url","options","config","headers","body","JSON","stringify","fetch","apiService","getProjects","createProject","projectData","method","updateProject","projectId","updates","deleteProject","getEvents","createEvent","eventData","updateEvent","eventId","deleteEvent","getTasks","createTask","taskData","updateTask","taskId","deleteTask","getHeatmapData","startDate","endDate","timeScale","params","URLSearchParams","append","toString","dataUtils","sortProjects","projects","sort","a","b","order","getVisibleProjects","filter","p","hidden","getHiddenProjects","getProjectTasks","tasks","t","getProjectEvents","events","e","getCompletedTasksCount","date","projectTasks","task","completed","taskDate","Date","createdAt","toDateString","targetDate","length","getEventsForDate","event","eventDate","getHeatmapIntensity","completedCount","maxTasks","Math","min","getHeatmapCellColor","projectColor","intensity","hex","replace","r","parseInt","substr","g","opacity","max","formatDate","format","d","toLocaleDateString","month","day","weekday","year","toLocaleTimeString","hour","minute","toLocaleString","generateDateRange","centerDate","daysToShow","dates","today","setDate","getDate","i","push","hasDeadline","some","type","getProjectDeadline","find","getProjectMilestones","validateTaskEventAssignment"],"sources":["/home/carruc/repos/heat-of-the-day-wip/client/src/services/api.js"],"sourcesContent":["// API service for Heat of the Day application\n// Handles all backend communication and error management\n\nconst BASE_URL = '/api';\n\nclass ApiError extends Error {\n  constructor(message, status, data) {\n    super(message);\n    this.name = 'ApiError';\n    this.status = status;\n    this.data = data;\n  }\n}\n\nconst handleResponse = async (response) => {\n  if (!response.ok) {\n    let errorMessage = 'Network error occurred';\n    try {\n      const errorData = await response.json();\n      errorMessage = errorData.error || errorMessage;\n    } catch {\n      // If JSON parsing fails, use default message\n    }\n    throw new ApiError(errorMessage, response.status);\n  }\n\n  // Handle 204 No Content responses\n  if (response.status === 204) {\n    return null;\n  }\n\n  try {\n    return await response.json();\n  } catch {\n    throw new ApiError('Invalid response format', response.status);\n  }\n};\n\nconst makeRequest = async (url, options = {}) => {\n  const config = {\n    headers: {\n      'Content-Type': 'application/json',\n      ...options.headers,\n    },\n    ...options,\n  };\n\n  if (config.body && typeof config.body !== 'string') {\n    config.body = JSON.stringify(config.body);\n  }\n\n  try {\n    const response = await fetch(`${BASE_URL}${url}`, config);\n    return await handleResponse(response);\n  } catch (error) {\n    if (error instanceof ApiError) {\n      throw error;\n    }\n    throw new ApiError('Network connection failed', 0);\n  }\n};\n\nexport const apiService = {\n  // Project endpoints - Implements R1.1, R1.2, R2.1, R2.2, R3.1, R3.2\n  async getProjects() {\n    return makeRequest('/projects');\n  },\n\n  async createProject(projectData) {\n    return makeRequest('/projects', {\n      method: 'POST',\n      body: projectData,\n    });\n  },\n\n  async updateProject(projectId, updates) {\n    return makeRequest(`/projects/${projectId}`, {\n      method: 'PUT',\n      body: updates,\n    });\n  },\n\n  async deleteProject(projectId) {\n    return makeRequest(`/projects/${projectId}`, {\n      method: 'DELETE',\n    });\n  },\n\n  // Event endpoints - Implements R7.1, R7.2, R8.1, R8.2, R9.1, R9.2, R9.3, R4, R5.1, R5.2\n  async getEvents(projectId = null) {\n    const url = projectId ? `/events?projectId=${projectId}` : '/events';\n    return makeRequest(url);\n  },\n\n  async createEvent(eventData) {\n    return makeRequest('/events', {\n      method: 'POST',\n      body: eventData,\n    });\n  },\n\n  async updateEvent(eventId, updates) {\n    return makeRequest(`/events/${eventId}`, {\n      method: 'PUT',\n      body: updates,\n    });\n  },\n\n  async deleteEvent(eventId) {\n    return makeRequest(`/events/${eventId}`, {\n      method: 'DELETE',\n    });\n  },\n\n  // Task endpoints - Implements R10.1, R10.2, R11.1, R11.2, R12.1, R12.2, R12.3, R13.1, R13.2, R6.1, R6.2\n  async getTasks(projectId = null) {\n    const url = projectId ? `/tasks?projectId=${projectId}` : '/tasks';\n    return makeRequest(url);\n  },\n\n  async createTask(taskData) {\n    return makeRequest('/tasks', {\n      method: 'POST',\n      body: taskData,\n    });\n  },\n\n  async updateTask(taskId, updates) {\n    return makeRequest(`/tasks/${taskId}`, {\n      method: 'PUT',\n      body: updates,\n    });\n  },\n\n  async deleteTask(taskId) {\n    return makeRequest(`/tasks/${taskId}`, {\n      method: 'DELETE',\n    });\n  },\n\n  // Analytics endpoints for heatmap visualization\n  async getHeatmapData(startDate = null, endDate = null, timeScale = 1) {\n    const params = new URLSearchParams();\n    if (startDate) params.append('startDate', startDate);\n    if (endDate) params.append('endDate', endDate);\n    if (timeScale) params.append('timeScale', timeScale.toString());\n    \n    const url = `/analytics/heatmap${params.toString() ? '?' + params.toString() : ''}`;\n    return makeRequest(url);\n  },\n};\n\n// Helper functions for data processing\nexport const dataUtils = {\n  // Sort projects by order\n  sortProjects(projects) {\n    return [...projects].sort((a, b) => a.order - b.order);\n  },\n\n  // Filter visible projects (not hidden)\n  getVisibleProjects(projects) {\n    return projects.filter(p => !p.hidden);\n  },\n\n  // Filter hidden projects\n  getHiddenProjects(projects) {\n    return projects.filter(p => p.hidden);\n  },\n\n  // Get tasks for a specific project\n  getProjectTasks(tasks, projectId) {\n    return tasks.filter(t => t.projectId === projectId);\n  },\n\n  // Get events for a specific project\n  getProjectEvents(events, projectId) {\n    return events.filter(e => e.projectId === projectId);\n  },\n\n  // Get completed tasks count for a project on a specific date\n  getCompletedTasksCount(tasks, projectId, date) {\n    const projectTasks = this.getProjectTasks(tasks, projectId);\n    return projectTasks.filter(task => {\n      if (!task.completed) return false;\n      const taskDate = new Date(task.createdAt).toDateString();\n      const targetDate = new Date(date).toDateString();\n      return taskDate === targetDate;\n    }).length;\n  },\n\n  // Get events for a specific date\n  getEventsForDate(events, date) {\n    const targetDate = new Date(date).toDateString();\n    return events.filter(event => {\n      const eventDate = new Date(event.date).toDateString();\n      return eventDate === targetDate;\n    });\n  },\n\n  // Calculate heatmap intensity (0-1) based on task completion\n  getHeatmapIntensity(completedCount, maxTasks = 10) {\n    return Math.min(completedCount / maxTasks, 1);\n  },\n\n  // Generate color with opacity based on project color and intensity\n  getHeatmapCellColor(projectColor, intensity) {\n    // Convert hex to RGB and apply opacity\n    const hex = projectColor.replace('#', '');\n    const r = parseInt(hex.substr(0, 2), 16);\n    const g = parseInt(hex.substr(2, 2), 16);\n    const b = parseInt(hex.substr(4, 2), 16);\n    \n    const opacity = Math.max(0.1, intensity); // Minimum opacity for visibility\n    return `rgba(${r}, ${g}, ${b}, ${opacity})`;\n  },\n\n  // Format date for display\n  formatDate(date, format = 'short') {\n    const d = new Date(date);\n    \n    switch (format) {\n      case 'short':\n        return d.toLocaleDateString('en-US', { \n          month: 'short', \n          day: 'numeric' \n        });\n      case 'long':\n        return d.toLocaleDateString('en-US', { \n          weekday: 'long',\n          year: 'numeric',\n          month: 'long', \n          day: 'numeric' \n        });\n      case 'time':\n        return d.toLocaleTimeString('en-US', {\n          hour: '2-digit',\n          minute: '2-digit'\n        });\n      case 'datetime':\n        return d.toLocaleString('en-US', {\n          year: 'numeric',\n          month: 'short',\n          day: 'numeric',\n          hour: '2-digit',\n          minute: '2-digit'\n        });\n      default:\n        return d.toLocaleDateString();\n    }\n  },\n\n  // Generate date range for heatmap\n  generateDateRange(centerDate, timeScale, daysToShow = 30) {\n    const dates = [];\n    const today = new Date();\n    \n    // Start from 7 days ago\n    const startDate = new Date(today);\n    startDate.setDate(today.getDate() - 7);\n    \n    for (let i = 0; i < daysToShow; i += timeScale) {\n      const date = new Date(startDate);\n      date.setDate(startDate.getDate() + i);\n      dates.push(new Date(date));\n    }\n    \n    return dates;\n  },\n\n  // Check if project has deadline\n  hasDeadline(events, projectId) {\n    return events.some(e => e.projectId === projectId && e.type === 'deadline');\n  },\n\n  // Get project deadline\n  getProjectDeadline(events, projectId) {\n    return events.find(e => e.projectId === projectId && e.type === 'deadline');\n  },\n\n  // Get project milestones\n  getProjectMilestones(events, projectId) {\n    return events.filter(e => e.projectId === projectId && e.type === 'milestone');\n  },\n\n  // Validate task assignment to event\n  validateTaskEventAssignment(task, event) {\n    if (!event) return true; // No event assignment is valid\n    return task.projectId === event.projectId;\n  },\n}; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}