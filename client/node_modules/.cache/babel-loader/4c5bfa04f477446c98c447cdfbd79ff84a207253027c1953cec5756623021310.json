{"ast":null,"code":"var _jsxFileName = \"/home/carruc/repos/heat-of-the-day-wip/client/src/components/HeatmapCalendar.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useMemo, useRef, useCallback } from 'react';\nimport { ChevronUp, ChevronDown, ChevronLeft, ChevronRight, EyeOff } from 'lucide-react';\nimport { dataUtils } from '../services/api';\nimport './HeatmapCalendar.css';\n\n// Implements requirements R14, R15, D1-D8\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst HeatmapCalendar = ({\n  projects,\n  tasks,\n  events,\n  timeScale,\n  currentDate,\n  onTimeScaleChange,\n  onCurrentDateChange,\n  onProjectUpdate,\n  onProjectDelete,\n  onProjectEdit,\n  onEventEdit,\n  onEventDelete,\n  onNewProject,\n  onNewEvent\n}) => {\n  _s();\n  const [daysToShow, setDaysToShow] = useState(51); // Simple fixed value for now\n  const [hoveredCell, setHoveredCell] = useState(null);\n  const [contextMenu, setContextMenu] = useState(null);\n  const [isCustomTimeScale, setIsCustomTimeScale] = useState(false);\n  const calendarRef = useRef(null);\n\n  // Automatically set custom mode if timeScale doesn't match presets\n  useEffect(() => {\n    const presetValues = [1, 3, 7];\n    if (!presetValues.includes(timeScale)) {\n      setIsCustomTimeScale(true);\n    }\n  }, [timeScale]);\n\n  // Calculate how many days can fit in the visible area\n  // Th Iis determines the number of columns that will be visible without horizontal scrolling\n  const calculateDaysThatFit = useCallback(() => {\n    if (!calendarRef.current) return 52; // Fallback\n\n    // 1. Get date-headers element\n    const dateHeadersDiv = calendarRef.current.querySelector('.date-headers');\n    if (!dateHeadersDiv) return 52; // Fallback\n\n    // 2. Get date-headers width and subtract project column width\n    const dateHeadersWidth = dateHeadersDiv.offsetWidth;\n    const projectColumnWidth = window.innerWidth <= 768 ? 160 : window.innerWidth <= 1024 ? 200 : 250;\n\n    // 3. Calculate available space for date columns\n    const availableSpace = dateHeadersWidth - projectColumnWidth;\n\n    // 4. Divide available space by minimum column width (32px)\n    const minColumnWidth = 32;\n    const maxColumns = availableSpace / minColumnWidth;\n\n    // 5. Take the rounded ceiling of that number\n    const result = Math.floor(maxColumns);\n\n    // 6. Return that number\n    return Math.max(result, 20); // Ensure minimum of 20 columns\n  }, []);\n\n  // Use the calculated number of days that fit in the visible area\n  const visibleDays = calculateDaysThatFit();\n\n  // Update daysToShow when the calculation changes\n  useEffect(() => {\n    const newDaysToShow = calculateDaysThatFit();\n    setDaysToShow(newDaysToShow);\n  }, [calculateDaysThatFit]);\n\n  // Recalculate on window resize\n  useEffect(() => {\n    const handleResize = () => {\n      setTimeout(() => {\n        const newDaysToShow = calculateDaysThatFit();\n        setDaysToShow(newDaysToShow);\n      }, 100);\n    };\n    window.addEventListener('resize', handleResize);\n    return () => window.removeEventListener('resize', handleResize);\n  }, [calculateDaysThatFit]);\n\n  // Create the grid template for exactly the number of visible days\n  const gridTemplateColumns = `250px repeat(${visibleDays}, minmax(20px, 32px))`;\n\n  // Generate date range for the heatmap - Implements D1.1, D4\n  const dateRange = useMemo(() => {\n    // Custom date range generation for fixed number of columns\n    const generateFixedColumnDateRange = (centerDate, timeScale, numColumns) => {\n      const dates = [];\n      const center = new Date(centerDate);\n\n      // Start from 7 days before the center date\n      const startDate = new Date(center);\n      startDate.setDate(center.getDate() - 7);\n\n      // Generate exactly numColumns dates, each representing timeScale days\n      for (let i = 0; i < numColumns; i++) {\n        const date = new Date(startDate);\n        date.setDate(startDate.getDate() + i * timeScale);\n        dates.push(new Date(date));\n      }\n      return dates;\n    };\n    return generateFixedColumnDateRange(currentDate, timeScale, visibleDays);\n  }, [currentDate, timeScale, visibleDays]);\n\n  // Sort and filter projects - Implements D7, D8\n  const visibleProjects = useMemo(() => {\n    return dataUtils.getVisibleProjects(dataUtils.sortProjects(projects));\n  }, [projects]);\n  const hiddenProjects = useMemo(() => {\n    return dataUtils.getHiddenProjects(projects);\n  }, [projects]);\n\n  // Calculate heatmap data - Implements D2\n  const heatmapData = useMemo(() => {\n    const data = {};\n\n    // Debug: Log all events to see what we have\n    if (events.length > 0) {\n      console.log('All events in heatmap calculation:', events);\n    }\n    projects.forEach(project => {\n      data[project.id] = {};\n      const projectEvents = dataUtils.getProjectEvents(events, project.id);\n\n      // Debug: Log project events\n      if (projectEvents.length > 0) {\n        console.log(`Project \"${project.name}\" events:`, projectEvents);\n      }\n      dateRange.forEach(date => {\n        const completedCount = dataUtils.getCompletedTasksCount(tasks, project.id, date);\n        const intensity = dataUtils.getHeatmapIntensity(completedCount);\n        const eventsForDate = dataUtils.getEventsForDate(projectEvents, date);\n\n        // Debug: Log when events are found for a date\n        if (eventsForDate.length > 0) {\n          console.log(`Found ${eventsForDate.length} events for ${date.toISOString().split('T')[0]}:`, eventsForDate);\n        }\n        data[project.id][date.toISOString()] = {\n          completedTasks: completedCount,\n          intensity,\n          events: eventsForDate,\n          color: dataUtils.getHeatmapCellColor(project.color, intensity)\n        };\n      });\n    });\n    return data;\n  }, [projects, tasks, events, dateRange]);\n\n  // Handle project order changes - Implements D8\n  const handleMoveProject = async (projectId, direction) => {\n    const project = projects.find(p => p.id === projectId);\n    if (!project) return;\n    const currentOrder = project.order;\n    const newOrder = direction === 'up' ? currentOrder - 1 : currentOrder + 1;\n\n    // Find the project to swap with\n    const targetProject = projects.find(p => p.order === newOrder);\n    if (!targetProject) return;\n\n    // Swap orders\n    await onProjectUpdate(projectId, {\n      order: newOrder\n    });\n    await onProjectUpdate(targetProject.id, {\n      order: currentOrder\n    });\n  };\n\n  // Handle project visibility toggle - Implements D7\n  const handleToggleHidden = async projectId => {\n    const project = projects.find(p => p.id === projectId);\n    if (project) {\n      await onProjectUpdate(projectId, {\n        hidden: !project.hidden\n      });\n    }\n  };\n\n  // Handle project collapse toggle - Implements D3\n  const handleToggleCollapsed = async projectId => {\n    const project = projects.find(p => p.id === projectId);\n    if (project) {\n      await onProjectUpdate(projectId, {\n        collapsed: !project.collapsed\n      });\n    }\n  };\n\n  // Navigate calendar - Implements D4\n  const navigateCalendar = direction => {\n    const newDate = new Date(currentDate);\n    const days = direction === 'left' ? -timeScale * 7 : timeScale * 7;\n    newDate.setDate(newDate.getDate() + days);\n    onCurrentDateChange(newDate);\n  };\n\n  // Handle context menu\n  const handleCellContextMenu = (e, project, date) => {\n    var _heatmapData$project$, _heatmapData$project$2;\n    e.preventDefault();\n    const cellEvents = ((_heatmapData$project$ = heatmapData[project.id]) === null || _heatmapData$project$ === void 0 ? void 0 : (_heatmapData$project$2 = _heatmapData$project$[date.toISOString()]) === null || _heatmapData$project$2 === void 0 ? void 0 : _heatmapData$project$2.events) || [];\n    setContextMenu({\n      x: e.clientX,\n      y: e.clientY,\n      project,\n      date,\n      events: cellEvents\n    });\n  };\n\n  // Close context menu when clicking outside\n  useEffect(() => {\n    const handleClickOutside = () => setContextMenu(null);\n    document.addEventListener('click', handleClickOutside);\n    return () => document.removeEventListener('click', handleClickOutside);\n  }, []);\n\n  // Get month headers - Implements D1.2\n  const getMonthHeaders = () => {\n    const potentialHeaders = [];\n    dateRange.forEach((date, index) => {\n      // For each cell, check if the 1st of any month falls within its timeScale period\n      const cellStartDate = new Date(date);\n      const cellEndDate = new Date(date);\n      cellEndDate.setDate(cellStartDate.getDate() + timeScale - 1);\n\n      // Check if the 1st of any month falls within this cell's date range\n      let monthStartInCell = null;\n\n      // Check each day within the cell's timeScale period\n      for (let dayOffset = 0; dayOffset < timeScale; dayOffset++) {\n        const checkDate = new Date(cellStartDate);\n        checkDate.setDate(cellStartDate.getDate() + dayOffset);\n        if (checkDate.getDate() === 1) {\n          monthStartInCell = checkDate;\n          break;\n        }\n      }\n\n      // If we found a month start within this cell, add to potential headers\n      if (monthStartInCell) {\n        const monthYear = `${monthStartInCell.getFullYear()}-${monthStartInCell.getMonth()}`;\n\n        // Make sure we haven't already added this month\n        if (!potentialHeaders.some(h => h.monthYear === monthYear)) {\n          const monthName = monthStartInCell.toLocaleDateString('en-US', {\n            month: 'short'\n          });\n          potentialHeaders.push({\n            month: monthName,\n            monthYear: monthYear,\n            position: index + 1,\n            // +1 to account for project column\n            year: monthStartInCell.getFullYear(),\n            date: new Date(monthStartInCell),\n            isJanuary: monthName === 'Jan'\n          });\n        }\n      }\n\n      // Special case: if this is the first cell and no month header was added yet,\n      // add the current month to avoid empty headers\n      if (index === 0 && potentialHeaders.length === 0) {\n        const monthName = date.toLocaleDateString('en-US', {\n          month: 'short'\n        });\n        const monthYear = `${date.getFullYear()}-${date.getMonth()}`;\n        potentialHeaders.push({\n          month: monthName,\n          monthYear: monthYear,\n          position: index + 1,\n          year: date.getFullYear(),\n          date: new Date(date),\n          isJanuary: monthName === 'Jan'\n        });\n      }\n    });\n\n    // Different filtering logic based on timeScale\n    if (timeScale > 10) {\n      // For large timescales, show most recent month and then every 3-4 cells\n      const filteredHeaders = [];\n\n      // Sort by date (most recent first)\n      const sortedHeaders = potentialHeaders.sort((a, b) => b.date - a.date);\n      if (sortedHeaders.length > 0) {\n        // Always include the most recent month\n        const mostRecent = sortedHeaders[0];\n        filteredHeaders.push(mostRecent);\n\n        // Then add months that are approximately 3-4 cells away\n        const targetSpacing = 3.5; // Average of 3 and 4\n        let lastIncludedPosition = mostRecent.position;\n\n        // Sort remaining headers by position for consistent spacing\n        const remainingHeaders = sortedHeaders.slice(1).sort((a, b) => a.position - b.position);\n        for (const header of remainingHeaders) {\n          const distance = Math.abs(header.position - lastIncludedPosition);\n\n          // Include if it's far enough from the last included header\n          if (distance >= Math.floor(targetSpacing)) {\n            filteredHeaders.push(header);\n            lastIncludedPosition = header.position;\n          }\n        }\n      }\n      return filteredHeaders.sort((a, b) => a.position - b.position);\n    } else {\n      // Original logic for smaller timescales\n      const filteredHeaders = [];\n\n      // Sort by position (chronological order)\n      const sortedHeaders = potentialHeaders.sort((a, b) => a.position - b.position);\n      for (let i = 0; i < sortedHeaders.length; i++) {\n        const currentHeader = sortedHeaders[i];\n        let shouldInclude = true;\n\n        // Check if this header is too close to any already included header\n        for (const includedHeader of filteredHeaders) {\n          const distance = Math.abs(currentHeader.position - includedHeader.position);\n          if (distance < 3) {\n            // Too close - prioritize the more recent one\n            if (currentHeader.date > includedHeader.date) {\n              // Remove the older header and include the current one\n              const indexToRemove = filteredHeaders.findIndex(h => h.monthYear === includedHeader.monthYear);\n              filteredHeaders.splice(indexToRemove, 1);\n            } else {\n              // Keep the existing newer header, skip current one\n              shouldInclude = false;\n              break;\n            }\n          }\n        }\n        if (shouldInclude) {\n          filteredHeaders.push(currentHeader);\n        }\n      }\n      return filteredHeaders;\n    }\n  };\n  const monthHeaders = getMonthHeaders();\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"heatmap-calendar\",\n    ref: calendarRef,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"heatmap-header\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"heatmap-controls\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"btn btn-ghost\",\n          onClick: () => navigateCalendar('left'),\n          title: \"Previous week\",\n          children: /*#__PURE__*/_jsxDEV(ChevronLeft, {\n            size: 16\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 366,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 361,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"btn btn-ghost\",\n          onClick: () => onCurrentDateChange(new Date()),\n          title: \"Go to today\",\n          children: \"Today\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 369,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"btn btn-ghost\",\n          onClick: () => navigateCalendar('right'),\n          title: \"Next week\",\n          children: /*#__PURE__*/_jsxDEV(ChevronRight, {\n            size: 16\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 382,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 377,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 360,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"timescale-control\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          className: \"form-label\",\n          children: \"Days per Cell:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 387,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"timescale-buttons\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            className: `timescale-btn ${timeScale === 1 && !isCustomTimeScale ? 'active' : ''}`,\n            onClick: () => {\n              setIsCustomTimeScale(false);\n              onTimeScaleChange(1);\n            },\n            children: \"1 day\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 389,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: `timescale-btn ${timeScale === 3 && !isCustomTimeScale ? 'active' : ''}`,\n            onClick: () => {\n              setIsCustomTimeScale(false);\n              onTimeScaleChange(3);\n            },\n            children: \"3 day\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 398,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: `timescale-btn ${timeScale === 7 && !isCustomTimeScale ? 'active' : ''}`,\n            onClick: () => {\n              setIsCustomTimeScale(false);\n              onTimeScaleChange(7);\n            },\n            children: \"week\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 407,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: `timescale-btn ${isCustomTimeScale ? 'active' : ''}`,\n            onClick: () => setIsCustomTimeScale(true),\n            children: \"Custom\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 416,\n            columnNumber: 13\n          }, this), isCustomTimeScale && /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"number\",\n            min: \"1\",\n            max: \"30\",\n            value: timeScale,\n            onChange: e => onTimeScaleChange(parseInt(e.target.value) || 1),\n            className: \"input custom-timescale-input\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 423,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 388,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 386,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 359,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"heatmap-grid\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"month-headers\",\n        style: {\n          gridTemplateColumns\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"project-column-header\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 440,\n          columnNumber: 11\n        }, this), dateRange.map((date, index) => {\n          const monthHeader = monthHeaders.find(h => h.position === index + 1);\n          return /*#__PURE__*/_jsxDEV(\"div\", {\n            className: `month-header ${monthHeader !== null && monthHeader !== void 0 && monthHeader.isJanuary ? 'january-header' : ''}`,\n            children: monthHeader && /*#__PURE__*/_jsxDEV(_Fragment, {\n              children: [monthHeader.isJanuary && /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"month-year\",\n                children: monthHeader.year\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 448,\n                columnNumber: 23\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"month-name\",\n                children: monthHeader.month\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 450,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true)\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 444,\n            columnNumber: 15\n          }, this);\n        })]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 439,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"date-headers\",\n        style: {\n          gridTemplateColumns\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"project-column-header\",\n          children: \"Projects\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 460,\n          columnNumber: 11\n        }, this), dateRange.map((date, index) => {\n          const today = new Date();\n          const isPastDate = date < today && date.toDateString() !== today.toDateString();\n\n          // Get weekday initial (M, T, W, T, F, S, SS)\n          const dayOfWeek = date.getDay(); // 0 = Sunday, 1 = Monday, etc.\n          const weekdayInitials = ['SS', 'M', 'T', 'W', 'T', 'F', 'S'];\n          const weekdayInitial = weekdayInitials[dayOfWeek];\n          return /*#__PURE__*/_jsxDEV(\"div\", {\n            className: `date-header ${isPastDate ? 'past-date' : ''}`,\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"date-day\",\n              children: date.getDate()\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 472,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"date-weekday\",\n              children: weekdayInitial\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 473,\n              columnNumber: 17\n            }, this)]\n          }, index, true, {\n            fileName: _jsxFileName,\n            lineNumber: 471,\n            columnNumber: 15\n          }, this);\n        })]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 459,\n        columnNumber: 9\n      }, this), visibleProjects.map(project => /*#__PURE__*/_jsxDEV(ProjectRow, {\n        project: project,\n        dateRange: dateRange,\n        heatmapData: heatmapData[project.id] || {},\n        gridTemplateColumns: gridTemplateColumns,\n        onToggleCollapsed: () => handleToggleCollapsed(project.id),\n        onMoveUp: () => handleMoveProject(project.id, 'up'),\n        onMoveDown: () => handleMoveProject(project.id, 'down'),\n        onToggleHidden: () => handleToggleHidden(project.id),\n        onEdit: () => onProjectEdit(project),\n        onDelete: () => onProjectDelete(project.id),\n        onCellContextMenu: handleCellContextMenu,\n        onCellHover: setHoveredCell,\n        events: dataUtils.getProjectEvents(events, project.id)\n      }, project.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 483,\n        columnNumber: 11\n      }, this)), hiddenProjects.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"hidden-projects-bar\",\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"text-muted\",\n          children: \"Hidden projects:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 504,\n          columnNumber: 13\n        }, this), hiddenProjects.map(project => /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"btn btn-ghost btn-sm\",\n          onClick: () => handleToggleHidden(project.id),\n          style: {\n            color: project.color\n          },\n          children: project.name\n        }, project.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 506,\n          columnNumber: 15\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 503,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"heatmap-action-buttons\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"btn btn-primary btn-project\",\n          onClick: onNewProject,\n          children: \"+ New Project\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 520,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"btn btn-secondary btn-event\",\n          onClick: onNewEvent,\n          children: \"+ New Event\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 526,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 519,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 437,\n      columnNumber: 7\n    }, this), contextMenu && /*#__PURE__*/_jsxDEV(ContextMenu, {\n      contextMenu: contextMenu,\n      onEventEdit: onEventEdit,\n      onEventDelete: onEventDelete,\n      onClose: () => setContextMenu(null)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 537,\n      columnNumber: 9\n    }, this), hoveredCell && /*#__PURE__*/_jsxDEV(CellTooltip, {\n      hoveredCell: hoveredCell\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 547,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 357,\n    columnNumber: 5\n  }, this);\n};\n\n// Project row component - Implements D3, D8\n_s(HeatmapCalendar, \"5alS+dYPwHovxbKXow2e9D3GTeI=\");\n_c = HeatmapCalendar;\nconst ProjectRow = ({\n  project,\n  dateRange,\n  heatmapData,\n  gridTemplateColumns,\n  onToggleCollapsed,\n  onMoveUp,\n  onMoveDown,\n  onToggleHidden,\n  onEdit,\n  onDelete,\n  onCellContextMenu,\n  onCellHover,\n  events\n}) => {\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"project-row\",\n      style: {\n        gridTemplateColumns\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"project-header\",\n        style: {\n          borderLeftColor: project.color\n        },\n        onClick: onToggleCollapsed,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"project-controls\",\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"btn-ghost btn-sm\",\n            onClick: e => {\n              e.stopPropagation();\n              onToggleCollapsed();\n            },\n            title: project.collapsed ? \"Expand\" : \"Collapse\",\n            children: project.collapsed ? '▶' : '▼'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 581,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 580,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"project-info\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"project-main-info\",\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"project-name\",\n              title: project.name,\n              children: project.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 596,\n              columnNumber: 15\n            }, this), !project.collapsed && events.length > 0 && /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"project-events-count text-muted\",\n              children: [events.length, \" event\", events.length !== 1 ? 's' : '']\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 598,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 595,\n            columnNumber: 13\n          }, this), !project.collapsed && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"project-move-controls\",\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"btn-ghost btn-sm\",\n              onClick: e => {\n                e.stopPropagation();\n                onMoveUp();\n              },\n              title: \"Move up\",\n              children: /*#__PURE__*/_jsxDEV(ChevronUp, {\n                size: 12\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 615,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 607,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"btn-ghost btn-sm\",\n              onClick: e => {\n                e.stopPropagation();\n                onMoveDown();\n              },\n              title: \"Move down\",\n              children: /*#__PURE__*/_jsxDEV(ChevronDown, {\n                size: 12\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 625,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 617,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 606,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 594,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"project-actions\",\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"btn-ghost btn-sm\",\n            onClick: e => {\n              e.stopPropagation();\n              onToggleHidden();\n            },\n            title: \"Hide project\",\n            children: /*#__PURE__*/_jsxDEV(EyeOff, {\n              size: 14\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 641,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 633,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 632,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 574,\n        columnNumber: 9\n      }, this), dateRange.map((date, dateIndex) => {\n        const cellData = heatmapData[date.toISOString()] || {\n          completedTasks: 0,\n          intensity: 0,\n          events: [],\n          color: 'transparent'\n        };\n        const hasDeadline = cellData.events.some(e => e.type === 'deadline');\n        const hasMilestone = cellData.events.some(e => e.type === 'milestone');\n        const today = new Date();\n        const isPastDate = date < today && date.toDateString() !== today.toDateString();\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          className: `heatmap-cell ${hasDeadline ? 'has-deadline' : ''} ${hasMilestone ? 'has-milestone' : ''} ${isPastDate ? 'past-date' : ''}`,\n          onContextMenu: e => onCellContextMenu(e, project, date),\n          onMouseEnter: () => onCellHover({\n            project,\n            date,\n            data: cellData\n          }),\n          onMouseLeave: () => onCellHover(null),\n          title: `${project.name} - ${dataUtils.formatDate(date)}: ${cellData.completedTasks} tasks completed`,\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"heatmap-square\",\n            style: {\n              backgroundColor: cellData.intensity > 0 ? project.color : 'var(--border)',\n              border: cellData.intensity === 0 ? `1px solid ${project.color}15` : 'none',\n              opacity: (() => {\n                let baseOpacity;\n                if (cellData.intensity === 0) {\n                  baseOpacity = 0.4; // Subtle grey for 0 tasks\n                } else {\n                  // Scale from 0.3 to 1.0 based on tasks (max at 10+ tasks)\n                  const normalizedIntensity = Math.min(cellData.completedTasks / 10, 1);\n                  baseOpacity = 0.3 + normalizedIntensity * 0.7;\n                }\n                // Reduce opacity for past dates\n                return isPastDate ? baseOpacity * 0.7 : baseOpacity;\n              })()\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 674,\n            columnNumber: 15\n          }, this), cellData.events.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"cell-event-names\",\n            children: cellData.events.map(event => /*#__PURE__*/_jsxDEV(\"div\", {\n              className: `event-name ${event.type}`,\n              onClick: e => {\n                e.stopPropagation();\n                onEdit && onEdit(event);\n              },\n              children: event.name\n            }, event.id, false, {\n              fileName: _jsxFileName,\n              lineNumber: 698,\n              columnNumber: 21\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 696,\n            columnNumber: 17\n          }, this)]\n        }, dateIndex, true, {\n          fileName: _jsxFileName,\n          lineNumber: 661,\n          columnNumber: 13\n        }, this);\n      })]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 572,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n};\n\n// Context menu component\n_c2 = ProjectRow;\nconst ContextMenu = ({\n  contextMenu,\n  onEventEdit,\n  onEventDelete,\n  onClose\n}) => {\n  const {\n    x,\n    y,\n    project,\n    date,\n    events\n  } = contextMenu;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"context-menu\",\n    style: {\n      position: 'fixed',\n      left: x,\n      top: y,\n      zIndex: 1000\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"context-menu-header\",\n      children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n        children: project.name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 734,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 735,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"text-muted\",\n        children: dataUtils.formatDate(date, 'long')\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 736,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 733,\n      columnNumber: 7\n    }, this), events.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"context-menu-section\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"context-menu-label\",\n        children: \"Events:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 741,\n        columnNumber: 11\n      }, this), events.map(event => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"context-menu-item\",\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          className: `event-type-badge ${event.type}`,\n          children: event.type\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 744,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          children: event.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 747,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"event-actions\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"btn-ghost btn-sm\",\n            onClick: () => {\n              onEventEdit(event);\n              onClose();\n            },\n            children: \"Edit\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 749,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"btn-ghost btn-sm\",\n            onClick: () => {\n              onEventDelete(event.id);\n              onClose();\n            },\n            children: \"Delete\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 758,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 748,\n          columnNumber: 15\n        }, this)]\n      }, event.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 743,\n        columnNumber: 13\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 740,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 724,\n    columnNumber: 5\n  }, this);\n};\n\n// Cell tooltip component\n_c3 = ContextMenu;\nconst CellTooltip = ({\n  hoveredCell\n}) => {\n  const {\n    project,\n    date,\n    data\n  } = hoveredCell;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"cell-tooltip\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"tooltip-header\",\n      children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n        style: {\n          color: project.color\n        },\n        children: project.name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 783,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"text-muted\",\n        children: dataUtils.formatDate(date, 'long')\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 784,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 782,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"tooltip-content\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: [\"Tasks completed: \", data.completedTasks]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 787,\n        columnNumber: 9\n      }, this), data.events.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [\"Events: \", data.events.map(e => e.name).join(', ')]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 789,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 786,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 781,\n    columnNumber: 5\n  }, this);\n};\n_c4 = CellTooltip;\nexport default HeatmapCalendar;\nvar _c, _c2, _c3, _c4;\n$RefreshReg$(_c, \"HeatmapCalendar\");\n$RefreshReg$(_c2, \"ProjectRow\");\n$RefreshReg$(_c3, \"ContextMenu\");\n$RefreshReg$(_c4, \"CellTooltip\");","map":{"version":3,"names":["React","useState","useEffect","useMemo","useRef","useCallback","ChevronUp","ChevronDown","ChevronLeft","ChevronRight","EyeOff","dataUtils","jsxDEV","_jsxDEV","Fragment","_Fragment","HeatmapCalendar","projects","tasks","events","timeScale","currentDate","onTimeScaleChange","onCurrentDateChange","onProjectUpdate","onProjectDelete","onProjectEdit","onEventEdit","onEventDelete","onNewProject","onNewEvent","_s","daysToShow","setDaysToShow","hoveredCell","setHoveredCell","contextMenu","setContextMenu","isCustomTimeScale","setIsCustomTimeScale","calendarRef","presetValues","includes","calculateDaysThatFit","current","dateHeadersDiv","querySelector","dateHeadersWidth","offsetWidth","projectColumnWidth","window","innerWidth","availableSpace","minColumnWidth","maxColumns","result","Math","floor","max","visibleDays","newDaysToShow","handleResize","setTimeout","addEventListener","removeEventListener","gridTemplateColumns","dateRange","generateFixedColumnDateRange","centerDate","numColumns","dates","center","Date","startDate","setDate","getDate","i","date","push","visibleProjects","getVisibleProjects","sortProjects","hiddenProjects","getHiddenProjects","heatmapData","data","length","console","log","forEach","project","id","projectEvents","getProjectEvents","name","completedCount","getCompletedTasksCount","intensity","getHeatmapIntensity","eventsForDate","getEventsForDate","toISOString","split","completedTasks","color","getHeatmapCellColor","handleMoveProject","projectId","direction","find","p","currentOrder","order","newOrder","targetProject","handleToggleHidden","hidden","handleToggleCollapsed","collapsed","navigateCalendar","newDate","days","handleCellContextMenu","e","_heatmapData$project$","_heatmapData$project$2","preventDefault","cellEvents","x","clientX","y","clientY","handleClickOutside","document","getMonthHeaders","potentialHeaders","index","cellStartDate","cellEndDate","monthStartInCell","dayOffset","checkDate","monthYear","getFullYear","getMonth","some","h","monthName","toLocaleDateString","month","position","year","isJanuary","filteredHeaders","sortedHeaders","sort","a","b","mostRecent","targetSpacing","lastIncludedPosition","remainingHeaders","slice","header","distance","abs","currentHeader","shouldInclude","includedHeader","indexToRemove","findIndex","splice","monthHeaders","className","ref","children","onClick","title","size","fileName","_jsxFileName","lineNumber","columnNumber","type","min","value","onChange","parseInt","target","style","map","monthHeader","today","isPastDate","toDateString","dayOfWeek","getDay","weekdayInitials","weekdayInitial","ProjectRow","onToggleCollapsed","onMoveUp","onMoveDown","onToggleHidden","onEdit","onDelete","onCellContextMenu","onCellHover","ContextMenu","onClose","CellTooltip","_c","borderLeftColor","stopPropagation","dateIndex","cellData","hasDeadline","hasMilestone","onContextMenu","onMouseEnter","onMouseLeave","formatDate","backgroundColor","border","opacity","baseOpacity","normalizedIntensity","event","_c2","left","top","zIndex","_c3","join","_c4","$RefreshReg$"],"sources":["/home/carruc/repos/heat-of-the-day-wip/client/src/components/HeatmapCalendar.js"],"sourcesContent":["import React, { useState, useEffect, useMemo, useRef, useCallback } from 'react';\nimport { ChevronUp, ChevronDown, ChevronLeft, ChevronRight, EyeOff } from 'lucide-react';\nimport { dataUtils } from '../services/api';\nimport './HeatmapCalendar.css';\n\n// Implements requirements R14, R15, D1-D8\nconst HeatmapCalendar = ({\n  projects,\n  tasks,\n  events,\n  timeScale,\n  currentDate,\n  onTimeScaleChange,\n  onCurrentDateChange,\n  onProjectUpdate,\n  onProjectDelete,\n  onProjectEdit,\n  onEventEdit,\n  onEventDelete,\n  onNewProject,\n  onNewEvent\n}) => {\n  const [daysToShow, setDaysToShow] = useState(51); // Simple fixed value for now\n  const [hoveredCell, setHoveredCell] = useState(null);\n  const [contextMenu, setContextMenu] = useState(null);\n  const [isCustomTimeScale, setIsCustomTimeScale] = useState(false);\n  const calendarRef = useRef(null);\n\n  // Automatically set custom mode if timeScale doesn't match presets\n  useEffect(() => {\n    const presetValues = [1, 3, 7];\n    if (!presetValues.includes(timeScale)) {\n      setIsCustomTimeScale(true);\n    }\n  }, [timeScale]);\n\n  // Calculate how many days can fit in the visible area\n  // Th Iis determines the number of columns that will be visible without horizontal scrolling\n  const calculateDaysThatFit = useCallback(() => {\n    if (!calendarRef.current) return 52; // Fallback\n    \n    // 1. Get date-headers element\n    const dateHeadersDiv = calendarRef.current.querySelector('.date-headers');\n    if (!dateHeadersDiv) return 52; // Fallback\n    \n    // 2. Get date-headers width and subtract project column width\n    const dateHeadersWidth = dateHeadersDiv.offsetWidth;\n    const projectColumnWidth = window.innerWidth <= 768 ? 160 : window.innerWidth <= 1024 ? 200 : 250;\n    \n    // 3. Calculate available space for date columns\n    const availableSpace = dateHeadersWidth - projectColumnWidth;\n    \n    // 4. Divide available space by minimum column width (32px)\n    const minColumnWidth = 32;\n    const maxColumns = availableSpace / minColumnWidth;\n    \n    // 5. Take the rounded ceiling of that number\n    const result = Math.floor(maxColumns);\n    \n    // 6. Return that number\n    return Math.max(result, 20); // Ensure minimum of 20 columns\n  }, []);\n\n  // Use the calculated number of days that fit in the visible area\n  const visibleDays = calculateDaysThatFit();\n\n  // Update daysToShow when the calculation changes\n  useEffect(() => {\n    const newDaysToShow = calculateDaysThatFit();\n    setDaysToShow(newDaysToShow);\n  }, [calculateDaysThatFit]);\n\n  // Recalculate on window resize\n  useEffect(() => {\n    const handleResize = () => {\n      setTimeout(() => {\n        const newDaysToShow = calculateDaysThatFit();\n        setDaysToShow(newDaysToShow);\n      }, 100);\n    };\n\n    window.addEventListener('resize', handleResize);\n    return () => window.removeEventListener('resize', handleResize);\n  }, [calculateDaysThatFit]);\n\n  // Create the grid template for exactly the number of visible days\n  const gridTemplateColumns = `250px repeat(${visibleDays}, minmax(20px, 32px))`;\n\n  // Generate date range for the heatmap - Implements D1.1, D4\n  const dateRange = useMemo(() => {\n    // Custom date range generation for fixed number of columns\n    const generateFixedColumnDateRange = (centerDate, timeScale, numColumns) => {\n      const dates = [];\n      const center = new Date(centerDate);\n      \n      // Start from 7 days before the center date\n      const startDate = new Date(center);\n      startDate.setDate(center.getDate() - 7);\n      \n      // Generate exactly numColumns dates, each representing timeScale days\n      for (let i = 0; i < numColumns; i++) {\n        const date = new Date(startDate);\n        date.setDate(startDate.getDate() + (i * timeScale));\n        dates.push(new Date(date));\n      }\n      \n      return dates;\n    };\n    \n    return generateFixedColumnDateRange(currentDate, timeScale, visibleDays);\n  }, [currentDate, timeScale, visibleDays]);\n\n  // Sort and filter projects - Implements D7, D8\n  const visibleProjects = useMemo(() => {\n    return dataUtils.getVisibleProjects(dataUtils.sortProjects(projects));\n  }, [projects]);\n\n  const hiddenProjects = useMemo(() => {\n    return dataUtils.getHiddenProjects(projects);\n  }, [projects]);\n\n  // Calculate heatmap data - Implements D2\n  const heatmapData = useMemo(() => {\n    const data = {};\n    \n    // Debug: Log all events to see what we have\n    if (events.length > 0) {\n      console.log('All events in heatmap calculation:', events);\n    }\n    \n    projects.forEach(project => {\n      data[project.id] = {};\n      const projectEvents = dataUtils.getProjectEvents(events, project.id);\n      \n      // Debug: Log project events\n      if (projectEvents.length > 0) {\n        console.log(`Project \"${project.name}\" events:`, projectEvents);\n      }\n      \n      dateRange.forEach(date => {\n        const completedCount = dataUtils.getCompletedTasksCount(tasks, project.id, date);\n        const intensity = dataUtils.getHeatmapIntensity(completedCount);\n        const eventsForDate = dataUtils.getEventsForDate(projectEvents, date);\n        \n        // Debug: Log when events are found for a date\n        if (eventsForDate.length > 0) {\n          console.log(`Found ${eventsForDate.length} events for ${date.toISOString().split('T')[0]}:`, eventsForDate);\n        }\n        \n        data[project.id][date.toISOString()] = {\n          completedTasks: completedCount,\n          intensity,\n          events: eventsForDate,\n          color: dataUtils.getHeatmapCellColor(project.color, intensity)\n        };\n      });\n    });\n    \n    return data;\n  }, [projects, tasks, events, dateRange]);\n\n  // Handle project order changes - Implements D8\n  const handleMoveProject = async (projectId, direction) => {\n    const project = projects.find(p => p.id === projectId);\n    if (!project) return;\n\n    const currentOrder = project.order;\n    const newOrder = direction === 'up' ? currentOrder - 1 : currentOrder + 1;\n    \n    // Find the project to swap with\n    const targetProject = projects.find(p => p.order === newOrder);\n    if (!targetProject) return;\n\n    // Swap orders\n    await onProjectUpdate(projectId, { order: newOrder });\n    await onProjectUpdate(targetProject.id, { order: currentOrder });\n  };\n\n  // Handle project visibility toggle - Implements D7\n  const handleToggleHidden = async (projectId) => {\n    const project = projects.find(p => p.id === projectId);\n    if (project) {\n      await onProjectUpdate(projectId, { hidden: !project.hidden });\n    }\n  };\n\n  // Handle project collapse toggle - Implements D3\n  const handleToggleCollapsed = async (projectId) => {\n    const project = projects.find(p => p.id === projectId);\n    if (project) {\n      await onProjectUpdate(projectId, { collapsed: !project.collapsed });\n    }\n  };\n\n  // Navigate calendar - Implements D4\n  const navigateCalendar = (direction) => {\n    const newDate = new Date(currentDate);\n    const days = direction === 'left' ? -timeScale * 7 : timeScale * 7;\n    newDate.setDate(newDate.getDate() + days);\n    onCurrentDateChange(newDate);\n  };\n\n  // Handle context menu\n  const handleCellContextMenu = (e, project, date) => {\n    e.preventDefault();\n    const cellEvents = heatmapData[project.id]?.[date.toISOString()]?.events || [];\n    \n    setContextMenu({\n      x: e.clientX,\n      y: e.clientY,\n      project,\n      date,\n      events: cellEvents\n    });\n  };\n\n  // Close context menu when clicking outside\n  useEffect(() => {\n    const handleClickOutside = () => setContextMenu(null);\n    document.addEventListener('click', handleClickOutside);\n    return () => document.removeEventListener('click', handleClickOutside);\n  }, []);\n\n  // Get month headers - Implements D1.2\n  const getMonthHeaders = () => {\n    const potentialHeaders = [];\n    \n    dateRange.forEach((date, index) => {\n      // For each cell, check if the 1st of any month falls within its timeScale period\n      const cellStartDate = new Date(date);\n      const cellEndDate = new Date(date);\n      cellEndDate.setDate(cellStartDate.getDate() + timeScale - 1);\n      \n      // Check if the 1st of any month falls within this cell's date range\n      let monthStartInCell = null;\n      \n      // Check each day within the cell's timeScale period\n      for (let dayOffset = 0; dayOffset < timeScale; dayOffset++) {\n        const checkDate = new Date(cellStartDate);\n        checkDate.setDate(cellStartDate.getDate() + dayOffset);\n        \n        if (checkDate.getDate() === 1) {\n          monthStartInCell = checkDate;\n          break;\n        }\n      }\n      \n      // If we found a month start within this cell, add to potential headers\n      if (monthStartInCell) {\n        const monthYear = `${monthStartInCell.getFullYear()}-${monthStartInCell.getMonth()}`;\n        \n        // Make sure we haven't already added this month\n        if (!potentialHeaders.some(h => h.monthYear === monthYear)) {\n          const monthName = monthStartInCell.toLocaleDateString('en-US', { month: 'short' });\n          \n          potentialHeaders.push({\n            month: monthName,\n            monthYear: monthYear,\n            position: index + 1, // +1 to account for project column\n            year: monthStartInCell.getFullYear(),\n            date: new Date(monthStartInCell),\n            isJanuary: monthName === 'Jan'\n          });\n        }\n      }\n      \n      // Special case: if this is the first cell and no month header was added yet,\n      // add the current month to avoid empty headers\n      if (index === 0 && potentialHeaders.length === 0) {\n        const monthName = date.toLocaleDateString('en-US', { month: 'short' });\n        const monthYear = `${date.getFullYear()}-${date.getMonth()}`;\n        \n        potentialHeaders.push({\n          month: monthName,\n          monthYear: monthYear,\n          position: index + 1,\n          year: date.getFullYear(),\n          date: new Date(date),\n          isJanuary: monthName === 'Jan'\n        });\n      }\n    });\n    \n    // Different filtering logic based on timeScale\n    if (timeScale > 10) {\n      // For large timescales, show most recent month and then every 3-4 cells\n      const filteredHeaders = [];\n      \n      // Sort by date (most recent first)\n      const sortedHeaders = potentialHeaders.sort((a, b) => b.date - a.date);\n      \n      if (sortedHeaders.length > 0) {\n        // Always include the most recent month\n        const mostRecent = sortedHeaders[0];\n        filteredHeaders.push(mostRecent);\n        \n        // Then add months that are approximately 3-4 cells away\n        const targetSpacing = 3.5; // Average of 3 and 4\n        let lastIncludedPosition = mostRecent.position;\n        \n        // Sort remaining headers by position for consistent spacing\n        const remainingHeaders = sortedHeaders.slice(1).sort((a, b) => a.position - b.position);\n        \n        for (const header of remainingHeaders) {\n          const distance = Math.abs(header.position - lastIncludedPosition);\n          \n          // Include if it's far enough from the last included header\n          if (distance >= Math.floor(targetSpacing)) {\n            filteredHeaders.push(header);\n            lastIncludedPosition = header.position;\n          }\n        }\n      }\n      \n      return filteredHeaders.sort((a, b) => a.position - b.position);\n    } else {\n      // Original logic for smaller timescales\n      const filteredHeaders = [];\n      \n      // Sort by position (chronological order)\n      const sortedHeaders = potentialHeaders.sort((a, b) => a.position - b.position);\n      \n      for (let i = 0; i < sortedHeaders.length; i++) {\n        const currentHeader = sortedHeaders[i];\n        let shouldInclude = true;\n        \n        // Check if this header is too close to any already included header\n        for (const includedHeader of filteredHeaders) {\n          const distance = Math.abs(currentHeader.position - includedHeader.position);\n          \n          if (distance < 3) {\n            // Too close - prioritize the more recent one\n            if (currentHeader.date > includedHeader.date) {\n              // Remove the older header and include the current one\n              const indexToRemove = filteredHeaders.findIndex(h => h.monthYear === includedHeader.monthYear);\n              filteredHeaders.splice(indexToRemove, 1);\n            } else {\n              // Keep the existing newer header, skip current one\n              shouldInclude = false;\n              break;\n            }\n          }\n        }\n        \n        if (shouldInclude) {\n          filteredHeaders.push(currentHeader);\n        }\n      }\n      \n      return filteredHeaders;\n    }\n  };\n\n  const monthHeaders = getMonthHeaders();\n\n  return (\n    <div className=\"heatmap-calendar\" ref={calendarRef}>\n      {/* Header with controls - Implements R15, D1.3 */}\n      <div className=\"heatmap-header\">\n        <div className=\"heatmap-controls\">\n          <button \n            className=\"btn btn-ghost\"\n            onClick={() => navigateCalendar('left')}\n            title=\"Previous week\"\n          >\n            <ChevronLeft size={16} />\n          </button>\n          \n          <button \n            className=\"btn btn-ghost\"\n            onClick={() => onCurrentDateChange(new Date())}\n            title=\"Go to today\"\n          >\n            Today\n          </button>\n          \n          <button \n            className=\"btn btn-ghost\"\n            onClick={() => navigateCalendar('right')}\n            title=\"Next week\"\n          >\n            <ChevronRight size={16} />\n          </button>\n        </div>\n\n        <div className=\"timescale-control\">\n          <label className=\"form-label\">Days per Cell:</label>\n          <div className=\"timescale-buttons\">\n            <button\n              className={`timescale-btn ${timeScale === 1 && !isCustomTimeScale ? 'active' : ''}`}\n              onClick={() => {\n                setIsCustomTimeScale(false);\n                onTimeScaleChange(1);\n              }}\n            >\n              1 day\n            </button>\n            <button\n              className={`timescale-btn ${timeScale === 3 && !isCustomTimeScale ? 'active' : ''}`}\n              onClick={() => {\n                setIsCustomTimeScale(false);\n                onTimeScaleChange(3);\n              }}\n            >\n              3 day\n            </button>\n            <button\n              className={`timescale-btn ${timeScale === 7 && !isCustomTimeScale ? 'active' : ''}`}\n              onClick={() => {\n                setIsCustomTimeScale(false);\n                onTimeScaleChange(7);\n              }}\n            >\n              week\n            </button>\n            <button\n              className={`timescale-btn ${isCustomTimeScale ? 'active' : ''}`}\n              onClick={() => setIsCustomTimeScale(true)}\n            >\n              Custom\n            </button>\n            {isCustomTimeScale && (\n              <input\n                type=\"number\"\n                min=\"1\"\n                max=\"30\"\n                value={timeScale}\n                onChange={(e) => onTimeScaleChange(parseInt(e.target.value) || 1)}\n                className=\"input custom-timescale-input\"\n              />\n            )}\n          </div>\n        </div>\n      </div>\n\n      {/* Calendar grid */}\n      <div className=\"heatmap-grid\">\n        {/* Month headers - Implements D1.2 */}\n        <div className=\"month-headers\" style={{ gridTemplateColumns }}>\n          <div className=\"project-column-header\"></div>\n          {dateRange.map((date, index) => {\n            const monthHeader = monthHeaders.find(h => h.position === index + 1);\n            return (\n              <div key={index} className={`month-header ${monthHeader?.isJanuary ? 'january-header' : ''}`}>\n                {monthHeader && (\n                  <>\n                    {monthHeader.isJanuary && (\n                      <div className=\"month-year\">{monthHeader.year}</div>\n                    )}\n                    <div className=\"month-name\">{monthHeader.month}</div>\n                  </>\n                )}\n              </div>\n            );\n          })}\n        </div>\n\n        {/* Date headers */}\n        <div className=\"date-headers\" style={{ gridTemplateColumns }}>\n          <div className=\"project-column-header\">Projects</div>\n          {dateRange.map((date, index) => {\n            const today = new Date();\n            const isPastDate = date < today && date.toDateString() !== today.toDateString();\n            \n            // Get weekday initial (M, T, W, T, F, S, SS)\n            const dayOfWeek = date.getDay(); // 0 = Sunday, 1 = Monday, etc.\n            const weekdayInitials = ['SS', 'M', 'T', 'W', 'T', 'F', 'S'];\n            const weekdayInitial = weekdayInitials[dayOfWeek];\n            \n            return (\n              <div key={index} className={`date-header ${isPastDate ? 'past-date' : ''}`}>\n                <span className=\"date-day\">{date.getDate()}</span>\n                <span className=\"date-weekday\">\n                  {weekdayInitial}\n                </span>\n              </div>\n            );\n          })}\n        </div>\n\n        {/* Project rows - Implements D1.1, D3, D7, D8 */}\n        {visibleProjects.map((project) => (\n          <ProjectRow\n            key={project.id}\n            project={project}\n            dateRange={dateRange}\n            heatmapData={heatmapData[project.id] || {}}\n            gridTemplateColumns={gridTemplateColumns}\n            onToggleCollapsed={() => handleToggleCollapsed(project.id)}\n            onMoveUp={() => handleMoveProject(project.id, 'up')}\n            onMoveDown={() => handleMoveProject(project.id, 'down')}\n            onToggleHidden={() => handleToggleHidden(project.id)}\n            onEdit={() => onProjectEdit(project)}\n            onDelete={() => onProjectDelete(project.id)}\n            onCellContextMenu={handleCellContextMenu}\n            onCellHover={setHoveredCell}\n            events={dataUtils.getProjectEvents(events, project.id)}\n          />\n        ))}\n\n        {/* Hidden projects bar - Implements D7 */}\n        {hiddenProjects.length > 0 && (\n          <div className=\"hidden-projects-bar\">\n            <span className=\"text-muted\">Hidden projects:</span>\n            {hiddenProjects.map(project => (\n              <button\n                key={project.id}\n                className=\"btn btn-ghost btn-sm\"\n                onClick={() => handleToggleHidden(project.id)}\n                style={{ color: project.color }}\n              >\n                {project.name}\n              </button>\n            ))}\n          </div>\n        )}\n\n        {/* Action buttons */}\n        <div className=\"heatmap-action-buttons\">\n          <button \n            className=\"btn btn-primary btn-project\"\n            onClick={onNewProject}\n          >\n            + New Project\n          </button>\n          <button \n            className=\"btn btn-secondary btn-event\"\n            onClick={onNewEvent}\n          >\n            + New Event\n          </button>\n        </div>\n      </div>\n\n      {/* Context menu for cells */}\n      {contextMenu && (\n        <ContextMenu\n          contextMenu={contextMenu}\n          onEventEdit={onEventEdit}\n          onEventDelete={onEventDelete}\n          onClose={() => setContextMenu(null)}\n        />\n      )}\n\n      {/* Tooltip for hovered cell */}\n      {hoveredCell && (\n        <CellTooltip hoveredCell={hoveredCell} />\n      )}\n    </div>\n  );\n};\n\n// Project row component - Implements D3, D8\nconst ProjectRow = ({\n  project,\n  dateRange,\n  heatmapData,\n  gridTemplateColumns,\n  onToggleCollapsed,\n  onMoveUp,\n  onMoveDown,\n  onToggleHidden,\n  onEdit,\n  onDelete,\n  onCellContextMenu,\n  onCellHover,\n  events\n}) => {\n\n  return (\n    <>\n      <div className=\"project-row\" style={{ gridTemplateColumns }}>\n        {/* Project header */}\n        <div \n          className=\"project-header\"\n          style={{ borderLeftColor: project.color }}\n          onClick={onToggleCollapsed}\n        >\n          {/* Collapse/expand toggle on the left */}\n          <div className=\"project-controls\">\n            <button\n              className=\"btn-ghost btn-sm\"\n              onClick={(e) => {\n                e.stopPropagation();\n                onToggleCollapsed();\n              }}\n              title={project.collapsed ? \"Expand\" : \"Collapse\"}\n            >\n              {project.collapsed ? '▶' : '▼'}\n            </button>\n          </div>\n\n          {/* Project info in the center */}\n          <div className=\"project-info\">\n            <div className=\"project-main-info\">\n              <span className=\"project-name\" title={project.name}>{project.name}</span>\n              {!project.collapsed && events.length > 0 && (\n                <span className=\"project-events-count text-muted\">\n                  {events.length} event{events.length !== 1 ? 's' : ''}\n                </span>\n              )}\n            </div>\n            \n            {/* Move buttons - only visible when expanded */}\n            {!project.collapsed && (\n              <div className=\"project-move-controls\">\n                <button \n                  className=\"btn-ghost btn-sm\"\n                  onClick={(e) => {\n                    e.stopPropagation();\n                    onMoveUp();\n                  }}\n                  title=\"Move up\"\n                >\n                  <ChevronUp size={12} />\n                </button>\n                <button \n                  className=\"btn-ghost btn-sm\"\n                  onClick={(e) => {\n                    e.stopPropagation();\n                    onMoveDown();\n                  }}\n                  title=\"Move down\"\n                >\n                  <ChevronDown size={12} />\n                </button>\n              </div>\n            )}\n          </div>\n\n          {/* Hide project button */}\n          <div className=\"project-actions\">\n            <button\n              className=\"btn-ghost btn-sm\"\n              onClick={(e) => {\n                e.stopPropagation();\n                onToggleHidden();\n              }}\n              title=\"Hide project\"\n            >\n              <EyeOff size={14} />\n            </button>\n          </div>\n        </div>\n\n        {/* Heatmap cells - Implements D2, D3 */}\n        {dateRange.map((date, dateIndex) => {\n          const cellData = heatmapData[date.toISOString()] || {\n            completedTasks: 0,\n            intensity: 0,\n            events: [],\n            color: 'transparent'\n          };\n\n          const hasDeadline = cellData.events.some(e => e.type === 'deadline');\n          const hasMilestone = cellData.events.some(e => e.type === 'milestone');\n          const today = new Date();\n          const isPastDate = date < today && date.toDateString() !== today.toDateString();\n\n          return (\n            <div\n              key={dateIndex}\n              className={`heatmap-cell ${hasDeadline ? 'has-deadline' : ''} ${hasMilestone ? 'has-milestone' : ''} ${isPastDate ? 'past-date' : ''}`}\n              onContextMenu={(e) => onCellContextMenu(e, project, date)}\n              onMouseEnter={() => onCellHover({\n                project,\n                date,\n                data: cellData\n              })}\n              onMouseLeave={() => onCellHover(null)}\n              title={`${project.name} - ${dataUtils.formatDate(date)}: ${cellData.completedTasks} tasks completed`}\n            >\n              {/* Rounded square indicator for heatmap intensity */}\n              <div \n                className=\"heatmap-square\"\n                style={{ \n                  backgroundColor: cellData.intensity > 0 ? project.color : 'var(--border)',\n                  border: cellData.intensity === 0 ? `1px solid ${project.color}15` : 'none',\n                  opacity: (() => {\n                    let baseOpacity;\n                    if (cellData.intensity === 0) {\n                      baseOpacity = 0.4; // Subtle grey for 0 tasks\n                    } else {\n                      // Scale from 0.3 to 1.0 based on tasks (max at 10+ tasks)\n                      const normalizedIntensity = Math.min(cellData.completedTasks / 10, 1);\n                      baseOpacity = 0.3 + (normalizedIntensity * 0.7);\n                    }\n                    // Reduce opacity for past dates\n                    return isPastDate ? baseOpacity * 0.7 : baseOpacity;\n                  })()\n                }}\n              />\n              \n              {/* Event names directly under the heatmap square */}\n              {cellData.events.length > 0 && (\n                <div className=\"cell-event-names\">\n                  {cellData.events.map(event => (\n                    <div\n                      key={event.id}\n                      className={`event-name ${event.type}`}\n                      onClick={(e) => {\n                        e.stopPropagation();\n                        onEdit && onEdit(event);\n                      }}\n                    >\n                      {event.name}\n                    </div>\n                  ))}\n                </div>\n              )}\n            </div>\n          );\n        })}\n      </div>\n    </>\n  );\n};\n\n// Context menu component\nconst ContextMenu = ({ contextMenu, onEventEdit, onEventDelete, onClose }) => {\n  const { x, y, project, date, events } = contextMenu;\n\n  return (\n    <div\n      className=\"context-menu\"\n      style={{ \n        position: 'fixed', \n        left: x, \n        top: y,\n        zIndex: 1000\n      }}\n    >\n      <div className=\"context-menu-header\">\n        <strong>{project.name}</strong>\n        <br />\n        <span className=\"text-muted\">{dataUtils.formatDate(date, 'long')}</span>\n      </div>\n      \n      {events.length > 0 && (\n        <div className=\"context-menu-section\">\n          <div className=\"context-menu-label\">Events:</div>\n          {events.map(event => (\n            <div key={event.id} className=\"context-menu-item\">\n              <span className={`event-type-badge ${event.type}`}>\n                {event.type}\n              </span>\n              <span>{event.name}</span>\n              <div className=\"event-actions\">\n                <button\n                  className=\"btn-ghost btn-sm\"\n                  onClick={() => {\n                    onEventEdit(event);\n                    onClose();\n                  }}\n                >\n                  Edit\n                </button>\n                <button\n                  className=\"btn-ghost btn-sm\"\n                  onClick={() => {\n                    onEventDelete(event.id);\n                    onClose();\n                  }}\n                >\n                  Delete\n                </button>\n              </div>\n            </div>\n          ))}\n        </div>\n      )}\n    </div>\n  );\n};\n\n// Cell tooltip component\nconst CellTooltip = ({ hoveredCell }) => {\n  const { project, date, data } = hoveredCell;\n\n  return (\n    <div className=\"cell-tooltip\">\n      <div className=\"tooltip-header\">\n        <strong style={{ color: project.color }}>{project.name}</strong>\n        <span className=\"text-muted\">{dataUtils.formatDate(date, 'long')}</span>\n      </div>\n      <div className=\"tooltip-content\">\n        <div>Tasks completed: {data.completedTasks}</div>\n        {data.events.length > 0 && (\n          <div>\n            Events: {data.events.map(e => e.name).join(', ')}\n          </div>\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default HeatmapCalendar; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}