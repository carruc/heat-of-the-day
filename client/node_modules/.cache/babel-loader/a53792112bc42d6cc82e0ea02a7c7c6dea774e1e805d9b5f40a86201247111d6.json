{"ast":null,"code":"var _jsxFileName = \"/home/carruc/repos/heat-of-the-day-wip/client/src/components/EventModal.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { X, Calendar, Clock } from 'lucide-react';\nimport DatePicker from 'react-datepicker';\nimport 'react-datepicker/dist/react-datepicker.css';\nimport { dataUtils } from '../services/api';\nimport './EventModal.css';\n\n// Implements requirement D6: Event creation modal\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst EventModal = ({\n  event,\n  projects,\n  onSave,\n  onClose\n}) => {\n  _s();\n  const [formData, setFormData] = useState({\n    name: '',\n    projectId: '',\n    date: '',\n    time: '',\n    type: 'milestone'\n  });\n  const [errors, setErrors] = useState({});\n  const [selectedDate, setSelectedDate] = useState(null); // Date object for react-datepicker\n\n  // Initialize form data when editing\n  useEffect(() => {\n    if (event) {\n      const eventDate = new Date(event.date);\n      const dateValue = eventDate.toISOString().split('T')[0];\n      setFormData({\n        name: event.name,\n        projectId: event.projectId,\n        date: dateValue,\n        time: eventDate.toTimeString().slice(0, 5),\n        type: event.type\n      });\n      // Set selectedDate to the date object\n      setSelectedDate(eventDate);\n    } else {\n      // Pre-fill with current year when creating new event\n      const currentYear = new Date().getFullYear();\n      const defaultDate = `${currentYear}-01-01`;\n      const defaultTime = '09:00';\n      setFormData(prev => ({\n        ...prev,\n        date: defaultDate,\n        time: defaultTime,\n        projectId: projects.length > 0 ? projects[0].id : ''\n      }));\n      // Set selectedDate to the date object\n      setSelectedDate(new Date(defaultDate));\n    }\n  }, [event, projects]);\n  const handleInputChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setFormData(prev => ({\n      ...prev,\n      [name]: value\n    }));\n\n    // Clear errors when user starts typing\n    if (errors[name]) {\n      setErrors(prev => ({\n        ...prev,\n        [name]: null\n      }));\n    }\n  };\n  const validateForm = () => {\n    const newErrors = {};\n    if (!formData.name.trim()) {\n      newErrors.name = 'Event name is required';\n    } else if (formData.name.trim().length < 2) {\n      newErrors.name = 'Event name must be at least 2 characters';\n    } else if (formData.name.trim().length > 100) {\n      newErrors.name = 'Event name must be less than 100 characters';\n    }\n    if (!formData.projectId) {\n      newErrors.projectId = 'Please select a project';\n    }\n    if (!formData.date) {\n      newErrors.date = 'Date is required';\n    } else {\n      const selectedDate = new Date(formData.date);\n      const today = new Date();\n      today.setHours(0, 0, 0, 0); // Set to start of today for accurate comparison\n\n      // Check if date is in the past (implement R9.3)\n      if (selectedDate < today) {\n        newErrors.date = 'Date must be today or in the future';\n      }\n    }\n    if (!formData.time) {\n      newErrors.time = 'Time is required';\n    }\n\n    // Check deadline constraint (implement R4)\n    if (formData.type === 'deadline' && formData.projectId) {\n      const project = projects.find(p => p.id === formData.projectId);\n      if (project) {\n        // This would need to be checked against existing events in the parent component\n        // For now, we'll let the backend handle this validation\n      }\n    }\n    setErrors(newErrors);\n    return Object.keys(newErrors).length === 0;\n  };\n  const handleSubmit = e => {\n    e.preventDefault();\n    if (validateForm()) {\n      const eventDateTime = new Date(formData.date + 'T' + formData.time);\n      onSave({\n        name: formData.name.trim(),\n        projectId: formData.projectId,\n        date: eventDateTime.toISOString(),\n        type: formData.type\n      });\n    }\n  };\n  const handleOverlayClick = e => {\n    if (e.target === e.currentTarget) {\n      onClose();\n    }\n  };\n\n  // Get selected project for preview\n  const selectedProject = projects.find(p => p.id === formData.projectId);\n\n  // Handle date change from react-datepicker\n  const handleDateChange = date => {\n    setSelectedDate(date);\n    if (date) {\n      // Convert to YYYY-MM-DD format for internal storage\n      const dateStr = date.toISOString().split('T')[0];\n      setFormData(prev => ({\n        ...prev,\n        date: dateStr\n      }));\n      if (errors.date) {\n        setErrors(prev => ({\n          ...prev,\n          date: null\n        }));\n      }\n    } else {\n      setFormData(prev => ({\n        ...prev,\n        date: ''\n      }));\n    }\n  };\n\n  // Format date for display in DD/MM/YYYY format for the preview\n  const formatDateForDisplay = () => {\n    if (formData.date && formData.time) {\n      const eventDate = new Date(formData.date + 'T' + formData.time);\n      const day = eventDate.getDate().toString().padStart(2, '0');\n      const month = (eventDate.getMonth() + 1).toString().padStart(2, '0');\n      const year = eventDate.getFullYear();\n      const time = formData.time;\n      return `${day}/${month}/${year} at ${time}`;\n    }\n    return 'Select date and time';\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"modal-overlay\",\n    onClick: handleOverlayClick,\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"modal-content event-modal\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"modal-header\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: event ? 'Edit Event' : 'Create New Event'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 168,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"btn btn-ghost btn-sm\",\n          onClick: onClose,\n          children: /*#__PURE__*/_jsxDEV(X, {\n            size: 16\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 170,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 169,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 167,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleSubmit,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"modal-body\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-group\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              className: \"form-label\",\n              children: \"Event Type *\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 178,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"event-type-selector\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                className: \"radio-option\",\n                children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"radio\",\n                  name: \"type\",\n                  value: \"milestone\",\n                  checked: formData.type === 'milestone',\n                  onChange: handleInputChange\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 181,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"radio-label\",\n                  children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                    className: \"radio-icon milestone\",\n                    children: \"M\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 189,\n                    columnNumber: 21\n                  }, this), \"Milestone\"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 188,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"radio-description\",\n                  children: \"A significant point or achievement in your project\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 192,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 180,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n                className: \"radio-option\",\n                children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"radio\",\n                  name: \"type\",\n                  value: \"deadline\",\n                  checked: formData.type === 'deadline',\n                  onChange: handleInputChange\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 198,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"radio-label\",\n                  children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                    className: \"radio-icon deadline\",\n                    children: \"D\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 206,\n                    columnNumber: 21\n                  }, this), \"Deadline\"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 205,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"radio-description\",\n                  children: \"The final date for project completion\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 209,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 197,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 179,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 177,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-group\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"eventProject\",\n              className: \"form-label\",\n              children: \"Project *\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 218,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n              id: \"eventProject\",\n              name: \"projectId\",\n              className: `input ${errors.projectId ? 'input-error' : ''}`,\n              value: formData.projectId,\n              onChange: handleInputChange,\n              children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"\",\n                children: \"Select a project...\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 228,\n                columnNumber: 17\n              }, this), projects.map(project => /*#__PURE__*/_jsxDEV(\"option\", {\n                value: project.id,\n                children: project.name\n              }, project.id, false, {\n                fileName: _jsxFileName,\n                lineNumber: 230,\n                columnNumber: 19\n              }, this))]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 221,\n              columnNumber: 15\n            }, this), errors.projectId && /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"form-error\",\n              children: errors.projectId\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 236,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 217,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-group\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"eventName\",\n              className: \"form-label\",\n              children: \"Event Name *\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 242,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              id: \"eventName\",\n              name: \"name\",\n              type: \"text\",\n              className: `input ${errors.name ? 'input-error' : ''}`,\n              value: formData.name,\n              onChange: handleInputChange,\n              placeholder: `Enter ${formData.type} name...`,\n              autoFocus: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 245,\n              columnNumber: 15\n            }, this), errors.name && /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"form-error\",\n              children: errors.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 256,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 241,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-group\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              className: \"form-label\",\n              children: \"Date and Time *\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 262,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"form-help\",\n              style: {\n                marginBottom: 'var(--spacing-sm)'\n              },\n              children: \"Please select the date and time for this event. Only dates from today onwards are allowed.\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 265,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"datetime-inputs\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"date-input-group\",\n                children: [/*#__PURE__*/_jsxDEV(DatePicker, {\n                  selected: selectedDate,\n                  onChange: handleDateChange,\n                  dateFormat: \"dd/MM/yyyy\",\n                  placeholderText: \"Select date\",\n                  className: `input ${errors.date ? 'input-error' : ''}`,\n                  minDate: new Date() // Prevent selecting past dates\n                  ,\n                  showYearDropdown: true,\n                  showMonthDropdown: true,\n                  dropdownMode: \"select\",\n                  autoComplete: \"off\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 270,\n                  columnNumber: 19\n                }, this), formData.date && /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"date-display\",\n                  style: {\n                    fontSize: '0.75rem',\n                    color: 'var(--success-color)',\n                    marginLeft: '8px'\n                  },\n                  children: \"\\u2713 Selected\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 283,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 269,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"time-input-group\",\n                children: [/*#__PURE__*/_jsxDEV(Clock, {\n                  size: 16,\n                  className: \"input-icon\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 290,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                  name: \"time\",\n                  type: \"time\",\n                  className: `input ${errors.time ? 'input-error' : ''}`,\n                  value: formData.time,\n                  onChange: handleInputChange\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 291,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 289,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 268,\n              columnNumber: 15\n            }, this), (errors.date || errors.time) && /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"form-error\",\n              children: errors.date || errors.time\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 301,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 261,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"event-preview\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"preview-label\",\n              children: \"Preview:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 309,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"preview-event\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: `event-type-badge ${formData.type}`,\n                style: {\n                  backgroundColor: (selectedProject === null || selectedProject === void 0 ? void 0 : selectedProject.color) || '#6b7280'\n                },\n                children: formData.type\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 311,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"preview-event-details\",\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"preview-event-name\",\n                  children: formData.name || `${formData.type} name`\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 320,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"preview-event-project\",\n                  children: selectedProject ? /*#__PURE__*/_jsxDEV(\"span\", {\n                    style: {\n                      color: selectedProject.color\n                    },\n                    children: selectedProject.name\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 325,\n                    columnNumber: 23\n                  }, this) : 'Select a project'\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 323,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"preview-event-datetime\",\n                  children: formatDateForDisplay()\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 332,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 319,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 310,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 308,\n            columnNumber: 13\n          }, this), formData.type === 'deadline' && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"warning-message\",\n            children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n              children: \"Note:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 342,\n              columnNumber: 17\n            }, this), \" Each project can only have one deadline. If this project already has a deadline, it will be replaced.\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 341,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 175,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"modal-footer\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"button\",\n            className: \"btn btn-secondary\",\n            onClick: onClose,\n            children: \"Cancel\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 349,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"submit\",\n            className: \"btn btn-primary\",\n            children: event ? 'Update Event' : 'Create Event'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 352,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 348,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 174,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 166,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 165,\n    columnNumber: 5\n  }, this);\n};\n_s(EventModal, \"dP7pnoX3dKZvh5AOoRCxhjMo8zM=\");\n_c = EventModal;\nexport default EventModal;\nvar _c;\n$RefreshReg$(_c, \"EventModal\");","map":{"version":3,"names":["React","useState","useEffect","X","Calendar","Clock","DatePicker","dataUtils","jsxDEV","_jsxDEV","EventModal","event","projects","onSave","onClose","_s","formData","setFormData","name","projectId","date","time","type","errors","setErrors","selectedDate","setSelectedDate","eventDate","Date","dateValue","toISOString","split","toTimeString","slice","currentYear","getFullYear","defaultDate","defaultTime","prev","length","id","handleInputChange","e","value","target","validateForm","newErrors","trim","today","setHours","project","find","p","Object","keys","handleSubmit","preventDefault","eventDateTime","handleOverlayClick","currentTarget","selectedProject","handleDateChange","dateStr","formatDateForDisplay","day","getDate","toString","padStart","month","getMonth","year","className","onClick","children","fileName","_jsxFileName","lineNumber","columnNumber","size","onSubmit","checked","onChange","htmlFor","map","placeholder","autoFocus","style","marginBottom","selected","dateFormat","placeholderText","minDate","showYearDropdown","showMonthDropdown","dropdownMode","autoComplete","fontSize","color","marginLeft","backgroundColor","_c","$RefreshReg$"],"sources":["/home/carruc/repos/heat-of-the-day-wip/client/src/components/EventModal.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { X, Calendar, Clock } from 'lucide-react';\nimport DatePicker from 'react-datepicker';\nimport 'react-datepicker/dist/react-datepicker.css';\nimport { dataUtils } from '../services/api';\nimport './EventModal.css';\n\n// Implements requirement D6: Event creation modal\nconst EventModal = ({ event, projects, onSave, onClose }) => {\n  const [formData, setFormData] = useState({\n    name: '',\n    projectId: '',\n    date: '',\n    time: '',\n    type: 'milestone'\n  });\n  const [errors, setErrors] = useState({});\n  const [selectedDate, setSelectedDate] = useState(null); // Date object for react-datepicker\n\n  // Initialize form data when editing\n  useEffect(() => {\n    if (event) {\n      const eventDate = new Date(event.date);\n      const dateValue = eventDate.toISOString().split('T')[0];\n      setFormData({\n        name: event.name,\n        projectId: event.projectId,\n        date: dateValue,\n        time: eventDate.toTimeString().slice(0, 5),\n        type: event.type\n      });\n      // Set selectedDate to the date object\n      setSelectedDate(eventDate);\n    } else {\n      // Pre-fill with current year when creating new event\n      const currentYear = new Date().getFullYear();\n      const defaultDate = `${currentYear}-01-01`;\n      const defaultTime = '09:00';\n      \n      setFormData(prev => ({\n        ...prev,\n        date: defaultDate,\n        time: defaultTime,\n        projectId: projects.length > 0 ? projects[0].id : ''\n      }));\n      // Set selectedDate to the date object\n      setSelectedDate(new Date(defaultDate));\n    }\n  }, [event, projects]);\n\n  const handleInputChange = (e) => {\n    const { name, value } = e.target;\n    setFormData(prev => ({\n      ...prev,\n      [name]: value\n    }));\n    \n    // Clear errors when user starts typing\n    if (errors[name]) {\n      setErrors(prev => ({\n        ...prev,\n        [name]: null\n      }));\n    }\n  };\n\n  const validateForm = () => {\n    const newErrors = {};\n\n    if (!formData.name.trim()) {\n      newErrors.name = 'Event name is required';\n    } else if (formData.name.trim().length < 2) {\n      newErrors.name = 'Event name must be at least 2 characters';\n    } else if (formData.name.trim().length > 100) {\n      newErrors.name = 'Event name must be less than 100 characters';\n    }\n\n    if (!formData.projectId) {\n      newErrors.projectId = 'Please select a project';\n    }\n\n    if (!formData.date) {\n      newErrors.date = 'Date is required';\n    } else {\n      const selectedDate = new Date(formData.date);\n      const today = new Date();\n      today.setHours(0, 0, 0, 0); // Set to start of today for accurate comparison\n      \n      // Check if date is in the past (implement R9.3)\n      if (selectedDate < today) {\n        newErrors.date = 'Date must be today or in the future';\n      }\n    }\n\n    if (!formData.time) {\n      newErrors.time = 'Time is required';\n    }\n\n    // Check deadline constraint (implement R4)\n    if (formData.type === 'deadline' && formData.projectId) {\n      const project = projects.find(p => p.id === formData.projectId);\n      if (project) {\n        // This would need to be checked against existing events in the parent component\n        // For now, we'll let the backend handle this validation\n      }\n    }\n\n    setErrors(newErrors);\n    return Object.keys(newErrors).length === 0;\n  };\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    \n    if (validateForm()) {\n      const eventDateTime = new Date(formData.date + 'T' + formData.time);\n      \n      onSave({\n        name: formData.name.trim(),\n        projectId: formData.projectId,\n        date: eventDateTime.toISOString(),\n        type: formData.type\n      });\n    }\n  };\n\n  const handleOverlayClick = (e) => {\n    if (e.target === e.currentTarget) {\n      onClose();\n    }\n  };\n\n  // Get selected project for preview\n  const selectedProject = projects.find(p => p.id === formData.projectId);\n\n  // Handle date change from react-datepicker\n  const handleDateChange = (date) => {\n    setSelectedDate(date);\n    if (date) {\n      // Convert to YYYY-MM-DD format for internal storage\n      const dateStr = date.toISOString().split('T')[0];\n      setFormData(prev => ({ ...prev, date: dateStr }));\n      if (errors.date) {\n        setErrors(prev => ({ ...prev, date: null }));\n      }\n    } else {\n      setFormData(prev => ({ ...prev, date: '' }));\n    }\n  };\n\n  // Format date for display in DD/MM/YYYY format for the preview\n  const formatDateForDisplay = () => {\n    if (formData.date && formData.time) {\n      const eventDate = new Date(formData.date + 'T' + formData.time);\n      const day = eventDate.getDate().toString().padStart(2, '0');\n      const month = (eventDate.getMonth() + 1).toString().padStart(2, '0');\n      const year = eventDate.getFullYear();\n      const time = formData.time;\n      return `${day}/${month}/${year} at ${time}`;\n    }\n    return 'Select date and time';\n  };\n\n  return (\n    <div className=\"modal-overlay\" onClick={handleOverlayClick}>\n      <div className=\"modal-content event-modal\">\n        <div className=\"modal-header\">\n          <h3>{event ? 'Edit Event' : 'Create New Event'}</h3>\n          <button className=\"btn btn-ghost btn-sm\" onClick={onClose}>\n            <X size={16} />\n          </button>\n        </div>\n\n        <form onSubmit={handleSubmit}>\n          <div className=\"modal-body\">\n            {/* Event type selection */}\n            <div className=\"form-group\">\n              <label className=\"form-label\">Event Type *</label>\n              <div className=\"event-type-selector\">\n                <label className=\"radio-option\">\n                  <input\n                    type=\"radio\"\n                    name=\"type\"\n                    value=\"milestone\"\n                    checked={formData.type === 'milestone'}\n                    onChange={handleInputChange}\n                  />\n                  <span className=\"radio-label\">\n                    <span className=\"radio-icon milestone\">M</span>\n                    Milestone\n                  </span>\n                  <span className=\"radio-description\">\n                    A significant point or achievement in your project\n                  </span>\n                </label>\n                \n                <label className=\"radio-option\">\n                  <input\n                    type=\"radio\"\n                    name=\"type\"\n                    value=\"deadline\"\n                    checked={formData.type === 'deadline'}\n                    onChange={handleInputChange}\n                  />\n                  <span className=\"radio-label\">\n                    <span className=\"radio-icon deadline\">D</span>\n                    Deadline\n                  </span>\n                  <span className=\"radio-description\">\n                    The final date for project completion\n                  </span>\n                </label>\n              </div>\n            </div>\n\n            {/* Project selection */}\n            <div className=\"form-group\">\n              <label htmlFor=\"eventProject\" className=\"form-label\">\n                Project *\n              </label>\n              <select\n                id=\"eventProject\"\n                name=\"projectId\"\n                className={`input ${errors.projectId ? 'input-error' : ''}`}\n                value={formData.projectId}\n                onChange={handleInputChange}\n              >\n                <option value=\"\">Select a project...</option>\n                {projects.map(project => (\n                  <option key={project.id} value={project.id}>\n                    {project.name}\n                  </option>\n                ))}\n              </select>\n              {errors.projectId && (\n                <div className=\"form-error\">{errors.projectId}</div>\n              )}\n            </div>\n\n            {/* Event name input */}\n            <div className=\"form-group\">\n              <label htmlFor=\"eventName\" className=\"form-label\">\n                Event Name *\n              </label>\n              <input\n                id=\"eventName\"\n                name=\"name\"\n                type=\"text\"\n                className={`input ${errors.name ? 'input-error' : ''}`}\n                value={formData.name}\n                onChange={handleInputChange}\n                placeholder={`Enter ${formData.type} name...`}\n                autoFocus\n              />\n              {errors.name && (\n                <div className=\"form-error\">{errors.name}</div>\n              )}\n            </div>\n\n            {/* Date and time inputs */}\n            <div className=\"form-group\">\n              <label className=\"form-label\">\n                Date and Time *\n              </label>\n              <div className=\"form-help\" style={{ marginBottom: 'var(--spacing-sm)' }}>\n                Please select the date and time for this event. Only dates from today onwards are allowed.\n              </div>\n              <div className=\"datetime-inputs\">\n                <div className=\"date-input-group\">\n                  <DatePicker\n                    selected={selectedDate}\n                    onChange={handleDateChange}\n                    dateFormat=\"dd/MM/yyyy\"\n                    placeholderText=\"Select date\"\n                    className={`input ${errors.date ? 'input-error' : ''}`}\n                    minDate={new Date()} // Prevent selecting past dates\n                    showYearDropdown\n                    showMonthDropdown\n                    dropdownMode=\"select\"\n                    autoComplete=\"off\"\n                  />\n                  {formData.date && (\n                    <span className=\"date-display\" style={{ fontSize: '0.75rem', color: 'var(--success-color)', marginLeft: '8px' }}>\n                      ✓ Selected\n                    </span>\n                  )}\n                </div>\n                \n                <div className=\"time-input-group\">\n                  <Clock size={16} className=\"input-icon\" />\n                  <input\n                    name=\"time\"\n                    type=\"time\"\n                    className={`input ${errors.time ? 'input-error' : ''}`}\n                    value={formData.time}\n                    onChange={handleInputChange}\n                  />\n                </div>\n              </div>\n              {(errors.date || errors.time) && (\n                <div className=\"form-error\">\n                  {errors.date || errors.time}\n                </div>\n              )}\n            </div>\n\n            {/* Event preview */}\n            <div className=\"event-preview\">\n              <div className=\"preview-label\">Preview:</div>\n              <div className=\"preview-event\">\n                <div \n                  className={`event-type-badge ${formData.type}`}\n                  style={{ \n                    backgroundColor: selectedProject?.color || '#6b7280' \n                  }}\n                >\n                  {formData.type}\n                </div>\n                <div className=\"preview-event-details\">\n                  <div className=\"preview-event-name\">\n                    {formData.name || `${formData.type} name`}\n                  </div>\n                  <div className=\"preview-event-project\">\n                    {selectedProject ? (\n                      <span style={{ color: selectedProject.color }}>\n                        {selectedProject.name}\n                      </span>\n                    ) : (\n                      'Select a project'\n                    )}\n                  </div>\n                  <div className=\"preview-event-datetime\">\n                    {formatDateForDisplay()}\n                  </div>\n                </div>\n              </div>\n            </div>\n\n            {/* Warning for deadlines */}\n            {formData.type === 'deadline' && (\n              <div className=\"warning-message\">\n                <strong>Note:</strong> Each project can only have one deadline. \n                If this project already has a deadline, it will be replaced.\n              </div>\n            )}\n          </div>\n\n          <div className=\"modal-footer\">\n            <button type=\"button\" className=\"btn btn-secondary\" onClick={onClose}>\n              Cancel\n            </button>\n            <button type=\"submit\" className=\"btn btn-primary\">\n              {event ? 'Update Event' : 'Create Event'}\n            </button>\n          </div>\n        </form>\n      </div>\n    </div>\n  );\n};\n\nexport default EventModal; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}