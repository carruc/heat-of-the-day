{"ast":null,"code":"var _jsxFileName = \"/home/carruc/repos/heat-of-the-day-wip/client/src/components/EventModal.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { X, Calendar, Clock } from 'lucide-react';\nimport { dataUtils } from '../services/api';\nimport './EventModal.css';\n\n// Helper function to detect browser's date format\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst getBrowserDateFormat = () => {\n  // Create a known date to test format\n  const testDate = new Date(2024, 0, 15); // January 15, 2024\n  const formatted = testDate.toLocaleDateString();\n\n  // Check if it starts with month (MM/DD) or day (DD/MM)\n  if (formatted.startsWith('1/15') || formatted.startsWith('01/15')) {\n    return 'MM/DD/YYYY';\n  } else if (formatted.startsWith('15/1') || formatted.startsWith('15/01')) {\n    return 'DD/MM/YYYY';\n  } else {\n    // Try to detect other common formats\n    const parts = formatted.split(/[\\/\\-\\.]/);\n    if (parts.length >= 3) {\n      const first = parseInt(parts[0]);\n      const second = parseInt(parts[1]);\n\n      // If first part is greater than 12, it's likely day first\n      if (first > 12) {\n        return 'DD/MM/YYYY';\n      } else if (second > 12) {\n        return 'MM/DD/YYYY';\n      }\n    }\n  }\n\n  // Default fallback\n  return 'MM/DD/YYYY';\n};\n\n// Implements requirement D6: Event creation modal\nconst EventModal = ({\n  event,\n  projects,\n  onSave,\n  onClose\n}) => {\n  _s();\n  const [formData, setFormData] = useState({\n    name: '',\n    projectId: '',\n    date: '',\n    time: '',\n    type: 'milestone'\n  });\n  const [errors, setErrors] = useState({});\n  const [browserDateFormat, setBrowserDateFormat] = useState('MM/DD/YYYY');\n  const [useManualDate, setUseManualDate] = useState(false);\n  const [manualDateInput, setManualDateInput] = useState('');\n\n  // Detect browser date format on mount\n  useEffect(() => {\n    const detectedFormat = getBrowserDateFormat();\n    setBrowserDateFormat(detectedFormat);\n  }, []);\n\n  // Initialize form data when editing\n  useEffect(() => {\n    if (event) {\n      const eventDate = new Date(event.date);\n      const dateValue = eventDate.toISOString().split('T')[0];\n      setFormData({\n        name: event.name,\n        projectId: event.projectId,\n        date: dateValue,\n        time: eventDate.toTimeString().slice(0, 5),\n        type: event.type\n      });\n      // Set manual date input to DD/MM/YYYY format\n      setManualDateInput(formatDateLabel(dateValue));\n    } else {\n      // Pre-fill with current year when creating new event\n      const currentYear = new Date().getFullYear();\n      const defaultDate = `${currentYear}-01-01`;\n      const defaultTime = '09:00';\n      setFormData(prev => ({\n        ...prev,\n        date: defaultDate,\n        time: defaultTime,\n        projectId: projects.length > 0 ? projects[0].id : ''\n      }));\n      // Set manual date input to DD/MM/YYYY format\n      setManualDateInput(formatDateLabel(defaultDate));\n    }\n  }, [event, projects]);\n  const handleInputChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setFormData(prev => ({\n      ...prev,\n      [name]: value\n    }));\n\n    // Clear errors when user starts typing\n    if (errors[name]) {\n      setErrors(prev => ({\n        ...prev,\n        [name]: null\n      }));\n    }\n  };\n  const validateForm = () => {\n    const newErrors = {};\n    if (!formData.name.trim()) {\n      newErrors.name = 'Event name is required';\n    } else if (formData.name.trim().length < 2) {\n      newErrors.name = 'Event name must be at least 2 characters';\n    } else if (formData.name.trim().length > 100) {\n      newErrors.name = 'Event name must be less than 100 characters';\n    }\n    if (!formData.projectId) {\n      newErrors.projectId = 'Please select a project';\n    }\n    if (!formData.date) {\n      newErrors.date = 'Date is required';\n    } else {\n      const selectedDate = new Date(formData.date + 'T' + (formData.time || '00:00'));\n      const now = new Date();\n\n      // Check if date is in the past (implement R9.3)\n      if (selectedDate < now) {\n        newErrors.date = 'Date cannot be in the past';\n      }\n    }\n    if (!formData.time) {\n      newErrors.time = 'Time is required';\n    }\n\n    // Check deadline constraint (implement R4)\n    if (formData.type === 'deadline' && formData.projectId) {\n      const project = projects.find(p => p.id === formData.projectId);\n      if (project) {\n        // This would need to be checked against existing events in the parent component\n        // For now, we'll let the backend handle this validation\n      }\n    }\n    setErrors(newErrors);\n    return Object.keys(newErrors).length === 0;\n  };\n  const handleSubmit = e => {\n    e.preventDefault();\n    if (validateForm()) {\n      const eventDateTime = new Date(formData.date + 'T' + formData.time);\n      onSave({\n        name: formData.name.trim(),\n        projectId: formData.projectId,\n        date: eventDateTime.toISOString(),\n        type: formData.type\n      });\n    }\n  };\n  const handleOverlayClick = e => {\n    if (e.target === e.currentTarget) {\n      onClose();\n    }\n  };\n\n  // Get selected project for preview\n  const selectedProject = projects.find(p => p.id === formData.projectId);\n\n  // Helper function to format date in DD/MM/YYYY for input labels (always show DD/MM/YYYY)\n  const formatDateLabel = dateString => {\n    if (!dateString) return '';\n    const date = new Date(dateString);\n    const day = date.getDate().toString().padStart(2, '0');\n    const month = (date.getMonth() + 1).toString().padStart(2, '0');\n    const year = date.getFullYear();\n    return `${day}/${month}/${year}`;\n  };\n\n  // Format date for display in DD/MM/YYYY format (always show DD/MM/YYYY regardless of browser locale)\n  const formatDateForDisplay = () => {\n    if (formData.date && formData.time) {\n      const eventDate = new Date(formData.date + 'T' + formData.time);\n      const day = eventDate.getDate().toString().padStart(2, '0');\n      const month = (eventDate.getMonth() + 1).toString().padStart(2, '0');\n      const year = eventDate.getFullYear();\n      const time = formData.time;\n      return `${day}/${month}/${year} at ${time}`;\n    }\n    return 'Select date and time';\n  };\n\n  // Helper function to parse DD/MM/YYYY format\n  const parseManualDate = dateStr => {\n    const parts = dateStr.split(/[\\/\\-\\.]/);\n    if (parts.length === 3) {\n      const day = parseInt(parts[0], 10);\n      const month = parseInt(parts[1], 10);\n      const year = parseInt(parts[2], 10);\n      if (day >= 1 && day <= 31 && month >= 1 && month <= 12 && year >= 1900) {\n        // Convert to YYYY-MM-DD format for the date input\n        return `${year}-${month.toString().padStart(2, '0')}-${day.toString().padStart(2, '0')}`;\n      }\n    }\n    return null;\n  };\n\n  // Handle manual date input change\n  const handleManualDateChange = e => {\n    const value = e.target.value;\n    setManualDateInput(value);\n\n    // Try to parse the date\n    const parsedDate = parseManualDate(value);\n    if (parsedDate) {\n      setFormData(prev => ({\n        ...prev,\n        date: parsedDate\n      }));\n      if (errors.date) {\n        setErrors(prev => ({\n          ...prev,\n          date: null\n        }));\n      }\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"modal-overlay\",\n    onClick: handleOverlayClick,\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"modal-content event-modal\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"modal-header\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: event ? 'Edit Event' : 'Create New Event'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 230,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"btn btn-ghost btn-sm\",\n          onClick: onClose,\n          children: /*#__PURE__*/_jsxDEV(X, {\n            size: 16\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 232,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 231,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 229,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleSubmit,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"modal-body\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-group\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              className: \"form-label\",\n              children: \"Event Type *\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 240,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"event-type-selector\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                className: \"radio-option\",\n                children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"radio\",\n                  name: \"type\",\n                  value: \"milestone\",\n                  checked: formData.type === 'milestone',\n                  onChange: handleInputChange\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 243,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"radio-label\",\n                  children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                    className: \"radio-icon milestone\",\n                    children: \"M\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 251,\n                    columnNumber: 21\n                  }, this), \"Milestone\"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 250,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"radio-description\",\n                  children: \"A significant point or achievement in your project\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 254,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 242,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n                className: \"radio-option\",\n                children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"radio\",\n                  name: \"type\",\n                  value: \"deadline\",\n                  checked: formData.type === 'deadline',\n                  onChange: handleInputChange\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 260,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"radio-label\",\n                  children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                    className: \"radio-icon deadline\",\n                    children: \"D\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 268,\n                    columnNumber: 21\n                  }, this), \"Deadline\"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 267,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"radio-description\",\n                  children: \"The final date for project completion\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 271,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 259,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 241,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 239,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-group\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"eventProject\",\n              className: \"form-label\",\n              children: \"Project *\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 280,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n              id: \"eventProject\",\n              name: \"projectId\",\n              className: `input ${errors.projectId ? 'input-error' : ''}`,\n              value: formData.projectId,\n              onChange: handleInputChange,\n              children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"\",\n                children: \"Select a project...\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 290,\n                columnNumber: 17\n              }, this), projects.map(project => /*#__PURE__*/_jsxDEV(\"option\", {\n                value: project.id,\n                children: project.name\n              }, project.id, false, {\n                fileName: _jsxFileName,\n                lineNumber: 292,\n                columnNumber: 19\n              }, this))]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 283,\n              columnNumber: 15\n            }, this), errors.projectId && /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"form-error\",\n              children: errors.projectId\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 298,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 279,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-group\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"eventName\",\n              className: \"form-label\",\n              children: \"Event Name *\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 304,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              id: \"eventName\",\n              name: \"name\",\n              type: \"text\",\n              className: `input ${errors.name ? 'input-error' : ''}`,\n              value: formData.name,\n              onChange: handleInputChange,\n              placeholder: `Enter ${formData.type} name...`,\n              autoFocus: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 307,\n              columnNumber: 15\n            }, this), errors.name && /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"form-error\",\n              children: errors.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 318,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 303,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-group\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              className: \"form-label\",\n              children: \"Date and Time *\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 324,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"form-help\",\n              style: {\n                marginBottom: 'var(--spacing-sm)'\n              },\n              children: [\"Please enter the date and time for this event. Your browser will show the date picker in \", /*#__PURE__*/_jsxDEV(\"strong\", {\n                children: browserDateFormat\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 328,\n                columnNumber: 106\n              }, this), \" format, but the date will always be saved in DD/MM/YYYY format for consistency.\", browserDateFormat === 'MM/DD/YYYY' && /*#__PURE__*/_jsxDEV(\"div\", {\n                style: {\n                  marginTop: '4px',\n                  padding: '8px',\n                  backgroundColor: '#fef3c7',\n                  border: '1px solid #f59e0b',\n                  borderRadius: '4px',\n                  fontSize: '0.75rem',\n                  color: '#92400e'\n                },\n                children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                  children: \"Note:\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 331,\n                  columnNumber: 21\n                }, this), \" Your browser is showing MM/DD/YYYY format. When typing, enter the month first, then day, then year.\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 330,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 327,\n              columnNumber: 15\n            }, this), browserDateFormat === 'MM/DD/YYYY' && /*#__PURE__*/_jsxDEV(\"div\", {\n              style: {\n                marginBottom: 'var(--spacing-sm)'\n              },\n              children: /*#__PURE__*/_jsxDEV(\"label\", {\n                style: {\n                  fontSize: '0.75rem',\n                  display: 'flex',\n                  alignItems: 'center',\n                  gap: '8px'\n                },\n                children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"checkbox\",\n                  checked: useManualDate,\n                  onChange: e => setUseManualDate(e.target.checked)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 338,\n                  columnNumber: 21\n                }, this), \"I prefer to type the date in DD/MM/YYYY format\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 337,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 336,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"datetime-inputs\",\n              children: [useManualDate ? /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"date-input-group\",\n                children: [/*#__PURE__*/_jsxDEV(Calendar, {\n                  size: 16,\n                  className: \"input-icon\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 350,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                  name: \"manualDate\",\n                  type: \"text\",\n                  className: `input ${errors.date ? 'input-error' : ''}`,\n                  value: manualDateInput,\n                  onChange: handleManualDateChange,\n                  placeholder: \"DD/MM/YYYY\",\n                  title: \"Enter date in DD/MM/YYYY format (e.g., 25/12/2024)\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 351,\n                  columnNumber: 21\n                }, this), formData.date && /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"date-display\",\n                  style: {\n                    fontSize: '0.75rem',\n                    color: 'var(--success-color)',\n                    marginLeft: '8px'\n                  },\n                  children: \"\\u2713 Valid date\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 361,\n                  columnNumber: 23\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 349,\n                columnNumber: 19\n              }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"date-input-group\",\n                children: [/*#__PURE__*/_jsxDEV(Calendar, {\n                  size: 16,\n                  className: \"input-icon\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 368,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                  name: \"date\",\n                  type: \"date\",\n                  className: `input ${errors.date ? 'input-error' : ''}`,\n                  value: formData.date,\n                  onChange: handleInputChange,\n                  min: new Date().toISOString().split('T')[0],\n                  title: formData.date ? `Selected: ${formatDateLabel(formData.date)} (DD/MM/YYYY)` : 'Select a date',\n                  placeholder: browserDateFormat === 'MM/DD/YYYY' ? 'MM/DD/YYYY' : 'DD/MM/YYYY'\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 369,\n                  columnNumber: 21\n                }, this), formData.date && /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"date-display\",\n                  style: {\n                    fontSize: '0.75rem',\n                    color: 'var(--text-muted)',\n                    marginLeft: '8px'\n                  },\n                  children: [\"\\uD83D\\uDCC5 \", formatDateLabel(formData.date), \" (DD/MM/YYYY)\"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 380,\n                  columnNumber: 23\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 367,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"time-input-group\",\n                children: [/*#__PURE__*/_jsxDEV(Clock, {\n                  size: 16,\n                  className: \"input-icon\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 388,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                  name: \"time\",\n                  type: \"time\",\n                  className: `input ${errors.time ? 'input-error' : ''}`,\n                  value: formData.time,\n                  onChange: handleInputChange\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 389,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 387,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 347,\n              columnNumber: 15\n            }, this), (errors.date || errors.time) && /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"form-error\",\n              children: errors.date || errors.time\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 399,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 323,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"event-preview\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"preview-label\",\n              children: \"Preview:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 407,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"preview-event\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: `event-type-badge ${formData.type}`,\n                style: {\n                  backgroundColor: (selectedProject === null || selectedProject === void 0 ? void 0 : selectedProject.color) || '#6b7280'\n                },\n                children: formData.type\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 409,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"preview-event-details\",\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"preview-event-name\",\n                  children: formData.name || `${formData.type} name`\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 418,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"preview-event-project\",\n                  children: selectedProject ? /*#__PURE__*/_jsxDEV(\"span\", {\n                    style: {\n                      color: selectedProject.color\n                    },\n                    children: selectedProject.name\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 423,\n                    columnNumber: 23\n                  }, this) : 'Select a project'\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 421,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"preview-event-datetime\",\n                  children: formatDateForDisplay()\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 430,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 417,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 408,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 406,\n            columnNumber: 13\n          }, this), formData.type === 'deadline' && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"warning-message\",\n            children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n              children: \"Note:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 440,\n              columnNumber: 17\n            }, this), \" Each project can only have one deadline. If this project already has a deadline, it will be replaced.\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 439,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 237,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"modal-footer\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"button\",\n            className: \"btn btn-secondary\",\n            onClick: onClose,\n            children: \"Cancel\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 447,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"submit\",\n            className: \"btn btn-primary\",\n            children: event ? 'Update Event' : 'Create Event'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 450,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 446,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 236,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 228,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 227,\n    columnNumber: 5\n  }, this);\n};\n_s(EventModal, \"4BISGbSAsgKC43uz5gX6TY3sOvI=\");\n_c = EventModal;\nexport default EventModal;\nvar _c;\n$RefreshReg$(_c, \"EventModal\");","map":{"version":3,"names":["React","useState","useEffect","X","Calendar","Clock","dataUtils","jsxDEV","_jsxDEV","getBrowserDateFormat","testDate","Date","formatted","toLocaleDateString","startsWith","parts","split","length","first","parseInt","second","EventModal","event","projects","onSave","onClose","_s","formData","setFormData","name","projectId","date","time","type","errors","setErrors","browserDateFormat","setBrowserDateFormat","useManualDate","setUseManualDate","manualDateInput","setManualDateInput","detectedFormat","eventDate","dateValue","toISOString","toTimeString","slice","formatDateLabel","currentYear","getFullYear","defaultDate","defaultTime","prev","id","handleInputChange","e","value","target","validateForm","newErrors","trim","selectedDate","now","project","find","p","Object","keys","handleSubmit","preventDefault","eventDateTime","handleOverlayClick","currentTarget","selectedProject","dateString","day","getDate","toString","padStart","month","getMonth","year","formatDateForDisplay","parseManualDate","dateStr","handleManualDateChange","parsedDate","className","onClick","children","fileName","_jsxFileName","lineNumber","columnNumber","size","onSubmit","checked","onChange","htmlFor","map","placeholder","autoFocus","style","marginBottom","marginTop","padding","backgroundColor","border","borderRadius","fontSize","color","display","alignItems","gap","title","marginLeft","min","_c","$RefreshReg$"],"sources":["/home/carruc/repos/heat-of-the-day-wip/client/src/components/EventModal.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { X, Calendar, Clock } from 'lucide-react';\nimport { dataUtils } from '../services/api';\nimport './EventModal.css';\n\n// Helper function to detect browser's date format\nconst getBrowserDateFormat = () => {\n  // Create a known date to test format\n  const testDate = new Date(2024, 0, 15); // January 15, 2024\n  const formatted = testDate.toLocaleDateString();\n  \n  // Check if it starts with month (MM/DD) or day (DD/MM)\n  if (formatted.startsWith('1/15') || formatted.startsWith('01/15')) {\n    return 'MM/DD/YYYY';\n  } else if (formatted.startsWith('15/1') || formatted.startsWith('15/01')) {\n    return 'DD/MM/YYYY';\n  } else {\n    // Try to detect other common formats\n    const parts = formatted.split(/[\\/\\-\\.]/);\n    if (parts.length >= 3) {\n      const first = parseInt(parts[0]);\n      const second = parseInt(parts[1]);\n      \n      // If first part is greater than 12, it's likely day first\n      if (first > 12) {\n        return 'DD/MM/YYYY';\n      } else if (second > 12) {\n        return 'MM/DD/YYYY';\n      }\n    }\n  }\n  \n  // Default fallback\n  return 'MM/DD/YYYY';\n};\n\n// Implements requirement D6: Event creation modal\nconst EventModal = ({ event, projects, onSave, onClose }) => {\n  const [formData, setFormData] = useState({\n    name: '',\n    projectId: '',\n    date: '',\n    time: '',\n    type: 'milestone'\n  });\n  const [errors, setErrors] = useState({});\n  const [browserDateFormat, setBrowserDateFormat] = useState('MM/DD/YYYY');\n  const [useManualDate, setUseManualDate] = useState(false);\n  const [manualDateInput, setManualDateInput] = useState('');\n\n  // Detect browser date format on mount\n  useEffect(() => {\n    const detectedFormat = getBrowserDateFormat();\n    setBrowserDateFormat(detectedFormat);\n  }, []);\n\n  // Initialize form data when editing\n  useEffect(() => {\n    if (event) {\n      const eventDate = new Date(event.date);\n      const dateValue = eventDate.toISOString().split('T')[0];\n      setFormData({\n        name: event.name,\n        projectId: event.projectId,\n        date: dateValue,\n        time: eventDate.toTimeString().slice(0, 5),\n        type: event.type\n      });\n      // Set manual date input to DD/MM/YYYY format\n      setManualDateInput(formatDateLabel(dateValue));\n    } else {\n      // Pre-fill with current year when creating new event\n      const currentYear = new Date().getFullYear();\n      const defaultDate = `${currentYear}-01-01`;\n      const defaultTime = '09:00';\n      \n      setFormData(prev => ({\n        ...prev,\n        date: defaultDate,\n        time: defaultTime,\n        projectId: projects.length > 0 ? projects[0].id : ''\n      }));\n      // Set manual date input to DD/MM/YYYY format\n      setManualDateInput(formatDateLabel(defaultDate));\n    }\n  }, [event, projects]);\n\n  const handleInputChange = (e) => {\n    const { name, value } = e.target;\n    setFormData(prev => ({\n      ...prev,\n      [name]: value\n    }));\n    \n    // Clear errors when user starts typing\n    if (errors[name]) {\n      setErrors(prev => ({\n        ...prev,\n        [name]: null\n      }));\n    }\n  };\n\n  const validateForm = () => {\n    const newErrors = {};\n\n    if (!formData.name.trim()) {\n      newErrors.name = 'Event name is required';\n    } else if (formData.name.trim().length < 2) {\n      newErrors.name = 'Event name must be at least 2 characters';\n    } else if (formData.name.trim().length > 100) {\n      newErrors.name = 'Event name must be less than 100 characters';\n    }\n\n    if (!formData.projectId) {\n      newErrors.projectId = 'Please select a project';\n    }\n\n    if (!formData.date) {\n      newErrors.date = 'Date is required';\n    } else {\n      const selectedDate = new Date(formData.date + 'T' + (formData.time || '00:00'));\n      const now = new Date();\n      \n      // Check if date is in the past (implement R9.3)\n      if (selectedDate < now) {\n        newErrors.date = 'Date cannot be in the past';\n      }\n    }\n\n    if (!formData.time) {\n      newErrors.time = 'Time is required';\n    }\n\n    // Check deadline constraint (implement R4)\n    if (formData.type === 'deadline' && formData.projectId) {\n      const project = projects.find(p => p.id === formData.projectId);\n      if (project) {\n        // This would need to be checked against existing events in the parent component\n        // For now, we'll let the backend handle this validation\n      }\n    }\n\n    setErrors(newErrors);\n    return Object.keys(newErrors).length === 0;\n  };\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    \n    if (validateForm()) {\n      const eventDateTime = new Date(formData.date + 'T' + formData.time);\n      \n      onSave({\n        name: formData.name.trim(),\n        projectId: formData.projectId,\n        date: eventDateTime.toISOString(),\n        type: formData.type\n      });\n    }\n  };\n\n  const handleOverlayClick = (e) => {\n    if (e.target === e.currentTarget) {\n      onClose();\n    }\n  };\n\n  // Get selected project for preview\n  const selectedProject = projects.find(p => p.id === formData.projectId);\n\n  // Helper function to format date in DD/MM/YYYY for input labels (always show DD/MM/YYYY)\n  const formatDateLabel = (dateString) => {\n    if (!dateString) return '';\n    const date = new Date(dateString);\n    const day = date.getDate().toString().padStart(2, '0');\n    const month = (date.getMonth() + 1).toString().padStart(2, '0');\n    const year = date.getFullYear();\n    return `${day}/${month}/${year}`;\n  };\n\n  // Format date for display in DD/MM/YYYY format (always show DD/MM/YYYY regardless of browser locale)\n  const formatDateForDisplay = () => {\n    if (formData.date && formData.time) {\n      const eventDate = new Date(formData.date + 'T' + formData.time);\n      const day = eventDate.getDate().toString().padStart(2, '0');\n      const month = (eventDate.getMonth() + 1).toString().padStart(2, '0');\n      const year = eventDate.getFullYear();\n      const time = formData.time;\n      return `${day}/${month}/${year} at ${time}`;\n    }\n    return 'Select date and time';\n  };\n\n  // Helper function to parse DD/MM/YYYY format\n  const parseManualDate = (dateStr) => {\n    const parts = dateStr.split(/[\\/\\-\\.]/);\n    if (parts.length === 3) {\n      const day = parseInt(parts[0], 10);\n      const month = parseInt(parts[1], 10);\n      const year = parseInt(parts[2], 10);\n      \n      if (day >= 1 && day <= 31 && month >= 1 && month <= 12 && year >= 1900) {\n        // Convert to YYYY-MM-DD format for the date input\n        return `${year}-${month.toString().padStart(2, '0')}-${day.toString().padStart(2, '0')}`;\n      }\n    }\n    return null;\n  };\n\n  // Handle manual date input change\n  const handleManualDateChange = (e) => {\n    const value = e.target.value;\n    setManualDateInput(value);\n    \n    // Try to parse the date\n    const parsedDate = parseManualDate(value);\n    if (parsedDate) {\n      setFormData(prev => ({ ...prev, date: parsedDate }));\n      if (errors.date) {\n        setErrors(prev => ({ ...prev, date: null }));\n      }\n    }\n  };\n\n  return (\n    <div className=\"modal-overlay\" onClick={handleOverlayClick}>\n      <div className=\"modal-content event-modal\">\n        <div className=\"modal-header\">\n          <h3>{event ? 'Edit Event' : 'Create New Event'}</h3>\n          <button className=\"btn btn-ghost btn-sm\" onClick={onClose}>\n            <X size={16} />\n          </button>\n        </div>\n\n        <form onSubmit={handleSubmit}>\n          <div className=\"modal-body\">\n            {/* Event type selection */}\n            <div className=\"form-group\">\n              <label className=\"form-label\">Event Type *</label>\n              <div className=\"event-type-selector\">\n                <label className=\"radio-option\">\n                  <input\n                    type=\"radio\"\n                    name=\"type\"\n                    value=\"milestone\"\n                    checked={formData.type === 'milestone'}\n                    onChange={handleInputChange}\n                  />\n                  <span className=\"radio-label\">\n                    <span className=\"radio-icon milestone\">M</span>\n                    Milestone\n                  </span>\n                  <span className=\"radio-description\">\n                    A significant point or achievement in your project\n                  </span>\n                </label>\n                \n                <label className=\"radio-option\">\n                  <input\n                    type=\"radio\"\n                    name=\"type\"\n                    value=\"deadline\"\n                    checked={formData.type === 'deadline'}\n                    onChange={handleInputChange}\n                  />\n                  <span className=\"radio-label\">\n                    <span className=\"radio-icon deadline\">D</span>\n                    Deadline\n                  </span>\n                  <span className=\"radio-description\">\n                    The final date for project completion\n                  </span>\n                </label>\n              </div>\n            </div>\n\n            {/* Project selection */}\n            <div className=\"form-group\">\n              <label htmlFor=\"eventProject\" className=\"form-label\">\n                Project *\n              </label>\n              <select\n                id=\"eventProject\"\n                name=\"projectId\"\n                className={`input ${errors.projectId ? 'input-error' : ''}`}\n                value={formData.projectId}\n                onChange={handleInputChange}\n              >\n                <option value=\"\">Select a project...</option>\n                {projects.map(project => (\n                  <option key={project.id} value={project.id}>\n                    {project.name}\n                  </option>\n                ))}\n              </select>\n              {errors.projectId && (\n                <div className=\"form-error\">{errors.projectId}</div>\n              )}\n            </div>\n\n            {/* Event name input */}\n            <div className=\"form-group\">\n              <label htmlFor=\"eventName\" className=\"form-label\">\n                Event Name *\n              </label>\n              <input\n                id=\"eventName\"\n                name=\"name\"\n                type=\"text\"\n                className={`input ${errors.name ? 'input-error' : ''}`}\n                value={formData.name}\n                onChange={handleInputChange}\n                placeholder={`Enter ${formData.type} name...`}\n                autoFocus\n              />\n              {errors.name && (\n                <div className=\"form-error\">{errors.name}</div>\n              )}\n            </div>\n\n            {/* Date and time inputs */}\n            <div className=\"form-group\">\n              <label className=\"form-label\">\n                Date and Time *\n              </label>\n              <div className=\"form-help\" style={{ marginBottom: 'var(--spacing-sm)' }}>\n                Please enter the date and time for this event. Your browser will show the date picker in <strong>{browserDateFormat}</strong> format, but the date will always be saved in DD/MM/YYYY format for consistency.\n                {browserDateFormat === 'MM/DD/YYYY' && (\n                  <div style={{ marginTop: '4px', padding: '8px', backgroundColor: '#fef3c7', border: '1px solid #f59e0b', borderRadius: '4px', fontSize: '0.75rem', color: '#92400e' }}>\n                    <strong>Note:</strong> Your browser is showing MM/DD/YYYY format. When typing, enter the month first, then day, then year.\n                  </div>\n                )}\n              </div>\n              {browserDateFormat === 'MM/DD/YYYY' && (\n                <div style={{ marginBottom: 'var(--spacing-sm)' }}>\n                  <label style={{ fontSize: '0.75rem', display: 'flex', alignItems: 'center', gap: '8px' }}>\n                    <input\n                      type=\"checkbox\"\n                      checked={useManualDate}\n                      onChange={(e) => setUseManualDate(e.target.checked)}\n                    />\n                    I prefer to type the date in DD/MM/YYYY format\n                  </label>\n                </div>\n              )}\n              <div className=\"datetime-inputs\">\n                {useManualDate ? (\n                  <div className=\"date-input-group\">\n                    <Calendar size={16} className=\"input-icon\" />\n                    <input\n                      name=\"manualDate\"\n                      type=\"text\"\n                      className={`input ${errors.date ? 'input-error' : ''}`}\n                      value={manualDateInput}\n                      onChange={handleManualDateChange}\n                      placeholder=\"DD/MM/YYYY\"\n                      title=\"Enter date in DD/MM/YYYY format (e.g., 25/12/2024)\"\n                    />\n                    {formData.date && (\n                      <span className=\"date-display\" style={{ fontSize: '0.75rem', color: 'var(--success-color)', marginLeft: '8px' }}>\n                        ✓ Valid date\n                      </span>\n                    )}\n                  </div>\n                ) : (\n                  <div className=\"date-input-group\">\n                    <Calendar size={16} className=\"input-icon\" />\n                    <input\n                      name=\"date\"\n                      type=\"date\"\n                      className={`input ${errors.date ? 'input-error' : ''}`}\n                      value={formData.date}\n                      onChange={handleInputChange}\n                      min={new Date().toISOString().split('T')[0]}\n                      title={formData.date ? `Selected: ${formatDateLabel(formData.date)} (DD/MM/YYYY)` : 'Select a date'}\n                      placeholder={browserDateFormat === 'MM/DD/YYYY' ? 'MM/DD/YYYY' : 'DD/MM/YYYY'}\n                    />\n                    {formData.date && (\n                      <span className=\"date-display\" style={{ fontSize: '0.75rem', color: 'var(--text-muted)', marginLeft: '8px' }}>\n                        📅 {formatDateLabel(formData.date)} (DD/MM/YYYY)\n                      </span>\n                    )}\n                  </div>\n                )}\n                \n                <div className=\"time-input-group\">\n                  <Clock size={16} className=\"input-icon\" />\n                  <input\n                    name=\"time\"\n                    type=\"time\"\n                    className={`input ${errors.time ? 'input-error' : ''}`}\n                    value={formData.time}\n                    onChange={handleInputChange}\n                  />\n                </div>\n              </div>\n              {(errors.date || errors.time) && (\n                <div className=\"form-error\">\n                  {errors.date || errors.time}\n                </div>\n              )}\n            </div>\n\n            {/* Event preview */}\n            <div className=\"event-preview\">\n              <div className=\"preview-label\">Preview:</div>\n              <div className=\"preview-event\">\n                <div \n                  className={`event-type-badge ${formData.type}`}\n                  style={{ \n                    backgroundColor: selectedProject?.color || '#6b7280' \n                  }}\n                >\n                  {formData.type}\n                </div>\n                <div className=\"preview-event-details\">\n                  <div className=\"preview-event-name\">\n                    {formData.name || `${formData.type} name`}\n                  </div>\n                  <div className=\"preview-event-project\">\n                    {selectedProject ? (\n                      <span style={{ color: selectedProject.color }}>\n                        {selectedProject.name}\n                      </span>\n                    ) : (\n                      'Select a project'\n                    )}\n                  </div>\n                  <div className=\"preview-event-datetime\">\n                    {formatDateForDisplay()}\n                  </div>\n                </div>\n              </div>\n            </div>\n\n            {/* Warning for deadlines */}\n            {formData.type === 'deadline' && (\n              <div className=\"warning-message\">\n                <strong>Note:</strong> Each project can only have one deadline. \n                If this project already has a deadline, it will be replaced.\n              </div>\n            )}\n          </div>\n\n          <div className=\"modal-footer\">\n            <button type=\"button\" className=\"btn btn-secondary\" onClick={onClose}>\n              Cancel\n            </button>\n            <button type=\"submit\" className=\"btn btn-primary\">\n              {event ? 'Update Event' : 'Create Event'}\n            </button>\n          </div>\n        </form>\n      </div>\n    </div>\n  );\n};\n\nexport default EventModal; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}